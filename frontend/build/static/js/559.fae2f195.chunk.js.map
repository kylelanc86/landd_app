{"version":3,"file":"static/js/559.fae2f195.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/CardActionArea/cardActionAreaClasses.js","../node_modules/@mui/material/CardActionArea/CardActionArea.js","../node_modules/@mui/icons-material/People.js","scenes/databases/index.jsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardActionAreaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActionArea', slot);\n}\nconst cardActionAreaClasses = generateUtilityClasses('MuiCardActionArea', ['root', 'focusVisible', 'focusHighlight']);\nexport default cardActionAreaClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"focusVisibleClassName\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport cardActionAreaClasses, { getCardActionAreaUtilityClass } from './cardActionAreaClasses';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    focusHighlight: ['focusHighlight']\n  };\n  return composeClasses(slots, getCardActionAreaUtilityClass, classes);\n};\nconst CardActionAreaRoot = styled(ButtonBase, {\n  name: 'MuiCardActionArea',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  display: 'block',\n  textAlign: 'inherit',\n  borderRadius: 'inherit',\n  // for Safari to work https://github.com/mui/material-ui/issues/36285.\n  width: '100%',\n  [`&:hover .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.hoverOpacity,\n    '@media (hover: none)': {\n      opacity: 0\n    }\n  },\n  [`&.${cardActionAreaClasses.focusVisible} .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.focusOpacity\n  }\n}));\nconst CardActionAreaFocusHighlight = styled('span', {\n  name: 'MuiCardActionArea',\n  slot: 'FocusHighlight',\n  overridesResolver: (props, styles) => styles.focusHighlight\n})(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit',\n  opacity: 0,\n  backgroundColor: 'currentcolor',\n  transition: theme.transitions.create('opacity', {\n    duration: theme.transitions.duration.short\n  })\n}));\nconst CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardActionArea'\n  });\n  const {\n      children,\n      className,\n      focusVisibleClassName\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(CardActionAreaRoot, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [children, /*#__PURE__*/_jsx(CardActionAreaFocusHighlight, {\n      className: classes.focusHighlight,\n      ownerState: ownerState\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActionArea;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3m-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3m0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5m8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5\"\n}), 'People');","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CardActionArea,\r\n} from \"@mui/material\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport PeopleIcon from \"@mui/icons-material/People\";\r\nimport AssignmentIcon from \"@mui/icons-material/Assignment\";\r\nimport ReceiptOutlinedIcon from \"@mui/icons-material/ReceiptOutlined\";\r\n\r\n// Import components for inline display\r\nimport Clients from \"../clients\";\r\nimport Projects from \"../projects\";\r\nimport Invoices from \"../invoices\";\r\n\r\nconst DatabaseWidget = ({\r\n  title,\r\n  icon,\r\n  onClick,\r\n  color = \"primary\",\r\n  isActive = false,\r\n}) => (\r\n  <Card\r\n    sx={{\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      transition: \"all 0.3s ease\",\r\n      backgroundColor: isActive ? `${color}.light` : \"background.paper\",\r\n      border: isActive ? `3px solid ${color}.main` : \"2px solid transparent\",\r\n      boxShadow: isActive\r\n        ? `0 6px 20px ${color}.main`\r\n        : \"0 2px 8px rgba(0, 0, 0, 0.1)\",\r\n      \"&:hover\": {\r\n        transform: isActive ? \"none\" : \"translateY(-4px)\",\r\n        boxShadow: isActive ? `0 6px 20px ${color}.main` : 4,\r\n      },\r\n    }}\r\n  >\r\n    <CardActionArea\r\n      onClick={onClick}\r\n      sx={{\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"stretch\",\r\n      }}\r\n    >\r\n      <CardContent sx={{ flexGrow: 1, textAlign: \"center\", p: 3 }}>\r\n        <Box sx={{ mb: 2, display: \"flex\", justifyContent: \"center\" }}>\r\n          {React.cloneElement(icon, {\r\n            sx: {\r\n              fontSize: 30,\r\n              color: isActive ? `${color}.dark` : `${color}.main`,\r\n            },\r\n          })}\r\n        </Box>\r\n        <Typography\r\n          variant=\"h6\"\r\n          component=\"h2\"\r\n          gutterBottom\r\n          sx={{\r\n            color: isActive ? `${color}.dark` : \"text.primary\",\r\n            fontWeight: isActive ? 600 : 400,\r\n          }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </CardContent>\r\n    </CardActionArea>\r\n  </Card>\r\n);\r\n\r\nconst Databases = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [selectedDatabase, setSelectedDatabase] = useState(\"projects\");\r\n\r\n  const databaseWidgets = [\r\n    {\r\n      title: \"Project Database\",\r\n      icon: <AssignmentIcon />,\r\n      color: \"primary\",\r\n      onClick: () => setSelectedDatabase(\"projects\"),\r\n    },\r\n    {\r\n      title: \"Client Database\",\r\n      icon: <PeopleIcon />,\r\n      color: \"primary\",\r\n      onClick: () => setSelectedDatabase(\"clients\"),\r\n    },\r\n    {\r\n      title: \"Invoice Database\",\r\n      icon: <ReceiptOutlinedIcon />,\r\n      color: \"primary\",\r\n      onClick: () => setSelectedDatabase(\"invoices\"),\r\n    },\r\n  ];\r\n\r\n  const renderSelectedContent = () => {\r\n    switch (selectedDatabase) {\r\n      case \"projects\":\r\n        return <Projects />;\r\n      case \"clients\":\r\n        return <Clients />;\r\n      case \"invoices\":\r\n        return <Invoices />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      {/* Widgets Section */}\r\n      <Box\r\n        sx={{\r\n          backgroundColor: \"background.paper\",\r\n          borderRadius: \"8px\",\r\n          boxShadow: \"0px 2px 8px rgba(0, 0, 0, 0.1)\",\r\n          p: 3,\r\n          mb: 3,\r\n        }}\r\n      >\r\n        <Grid container spacing={3}>\r\n          {databaseWidgets.map((widget, index) => {\r\n            // Convert widget title to match selectedDatabase format\r\n            let widgetKey = widget.title.toLowerCase().replace(\" database\", \"\");\r\n            // Handle the \"project\" vs \"projects\" mismatch\r\n            if (widgetKey === \"project\") widgetKey = \"projects\";\r\n            if (widgetKey === \"client\") widgetKey = \"clients\";\r\n            if (widgetKey === \"invoice\") widgetKey = \"invoices\";\r\n\r\n            const isActive = selectedDatabase === widgetKey;\r\n\r\n            console.log(\r\n              `Widget: ${widget.title}, Key: ${widgetKey}, Selected: ${selectedDatabase}, Active: ${isActive}`\r\n            );\r\n\r\n            return (\r\n              <Grid item xs={12} md={4} key={index}>\r\n                <DatabaseWidget {...widget} isActive={isActive} />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Box>\r\n\r\n      {/* Table Section */}\r\n      {selectedDatabase && (\r\n        <Box\r\n          sx={{\r\n            backgroundColor: \"background.paper\",\r\n            borderRadius: \"8px\",\r\n            boxShadow: \"0px 2px 8px rgba(0, 0, 0, 0.1)\",\r\n            p: 3,\r\n          }}\r\n        >\r\n          <Typography\r\n            variant=\"h5\"\r\n            component=\"h2\"\r\n            gutterBottom\r\n            sx={{ mb: 3 }}\r\n          ></Typography>\r\n          {renderSelectedContent()}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Databases;\r\n"],"names":["getCardActionAreaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionAreaRoot","styled","ButtonBase","name","overridesResolver","props","styles","root","_ref","theme","display","textAlign","borderRadius","width","concat","cardActionAreaClasses","focusHighlight","opacity","vars","palette","action","hoverOpacity","focusVisible","focusOpacity","CardActionAreaFocusHighlight","_ref2","overflow","pointerEvents","position","top","right","bottom","left","backgroundColor","transition","transitions","create","duration","short","React","inProps","ref","useDefaultProps","children","className","focusVisibleClassName","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","_jsxs","_extends","clsx","_jsx","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","DatabaseWidget","title","icon","onClick","color","isActive","Card","sx","height","flexDirection","border","boxShadow","transform","CardActionArea","alignItems","CardContent","flexGrow","p","Box","mb","justifyContent","fontSize","Typography","variant","component","gutterBottom","fontWeight","Databases","useNavigate","useLocation","selectedDatabase","setSelectedDatabase","useState","databaseWidgets","AssignmentIcon","PeopleIcon","ReceiptOutlinedIcon","Grid","container","spacing","map","widget","index","widgetKey","toLowerCase","replace","console","log","item","xs","md","_objectSpread","renderSelectedContent","Projects","Clients","Invoices"],"sourceRoot":""}