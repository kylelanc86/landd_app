{"version":3,"file":"static/js/410.20fd201e.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/CardActions/cardActionsClasses.js","../node_modules/@mui/material/CardActions/CardActions.js","data/userData.js","utils/signatureUtils.js","scenes/users/index.jsx","components/TruncatedCell.jsx","../node_modules/@mui/icons-material/Remove.js","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(style) ~ :not(style)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n      disableSpacing = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","export const USER_LEVELS = [\"admin\", \"manager\", \"employee\"];\r\n\r\nexport const fakeUsers = [\r\n  {\r\n    id: 1,\r\n    userID: \"JS001\",\r\n    firstName: \"John\",\r\n    lastName: \"Smith\",\r\n    email: \"john.smith@landd.com\",\r\n    phone: \"0412345678\",\r\n    userLevel: \"admin\",\r\n    isActive: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    userID: \"SJ002\",\r\n    firstName: \"Sarah\",\r\n    lastName: \"Johnson\",\r\n    email: \"sarah.johnson@landd.com\",\r\n    phone: \"0423456789\",\r\n    userLevel: \"manager\",\r\n    isActive: true,\r\n  },\r\n  {\r\n    id: 3,\r\n    userID: \"MB003\",\r\n    firstName: \"Michael\",\r\n    lastName: \"Brown\",\r\n    email: \"michael.brown@landd.com\",\r\n    phone: \"0434567890\",\r\n    userLevel: \"employee\",\r\n    isActive: true,\r\n  },\r\n  {\r\n    id: 4,\r\n    userID: \"EW004\",\r\n    firstName: \"Emma\",\r\n    lastName: \"Wilson\",\r\n    email: \"emma.wilson@landd.com\",\r\n    phone: \"0445678901\",\r\n    userLevel: \"manager\",\r\n    isActive: true,\r\n  },\r\n  {\r\n    id: 5,\r\n    userID: \"DT005\",\r\n    firstName: \"David\",\r\n    lastName: \"Taylor\",\r\n    email: \"david.taylor@landd.com\",\r\n    phone: \"0456789012\",\r\n    userLevel: \"employee\",\r\n    isActive: true,\r\n  },\r\n  {\r\n    id: 6,\r\n    userID: \"LA006\",\r\n    firstName: \"Lisa\",\r\n    lastName: \"Anderson\",\r\n    email: \"lisa.anderson@landd.com\",\r\n    phone: \"0467890123\",\r\n    userLevel: \"employee\",\r\n    isActive: true,\r\n  },\r\n  {\r\n    id: 7,\r\n    userID: \"JT007\",\r\n    firstName: \"James\",\r\n    lastName: \"Thomas\",\r\n    email: \"james.thomas@landd.com\",\r\n    phone: \"0478901234\",\r\n    userLevel: \"manager\",\r\n    isActive: true,\r\n  },\r\n  {\r\n    id: 8,\r\n    userID: \"RJ008\",\r\n    firstName: \"Rachel\",\r\n    lastName: \"Jackson\",\r\n    email: \"rachel.jackson@landd.com\",\r\n    phone: \"0489012345\",\r\n    userLevel: \"employee\",\r\n    isActive: true,\r\n  },\r\n  {\r\n    id: 9,\r\n    userID: \"DW009\",\r\n    firstName: \"Daniel\",\r\n    lastName: \"White\",\r\n    email: \"daniel.white@landd.com\",\r\n    phone: \"0490123456\",\r\n    userLevel: \"employee\",\r\n    isActive: true,\r\n  },\r\n  {\r\n    id: 10,\r\n    userID: \"SH010\",\r\n    firstName: \"Sophie\",\r\n    lastName: \"Harris\",\r\n    email: \"sophie.harris@landd.com\",\r\n    phone: \"0401234567\",\r\n    userLevel: \"manager\",\r\n    isActive: true,\r\n  },\r\n]; ","/**\r\n * Utility functions for handling user signatures in reports\r\n */\r\n\r\n/**\r\n * Get user signature by user ID\r\n * @param {string} userId - The user's ID\r\n * @param {Array} users - Array of users from the system\r\n * @returns {string|null} - The user's signature image data URL or null if not found\r\n */\r\nexport const getUserSignature = (userId, users) => {\r\n  const user = users.find(u => u._id === userId);\r\n  return user?.signature || null;\r\n};\r\n\r\n/**\r\n * Get user's licences by user ID\r\n * @param {string} userId - The user's ID\r\n * @param {Array} users - Array of users from the system\r\n * @returns {Array} - Array of licences for the user\r\n */\r\nexport const getUserLicences = (userId, users) => {\r\n  const user = users.find(u => u._id === userId);\r\n  return user?.licences || [];\r\n};\r\n\r\n/**\r\n * Format licences for display in reports\r\n * @param {Array} licences - Array of licences\r\n * @returns {string} - Formatted string of licences\r\n */\r\nexport const formatLicences = (licences) => {\r\n  if (!licences || licences.length === 0) {\r\n    return 'No licences';\r\n  }\r\n  \r\n  return licences\r\n    .map(licence => `${licence.state}: ${licence.licenceNumber} (${licence.licenceType})`)\r\n    .join(', ');\r\n};\r\n\r\n/**\r\n * Insert signature into a PDF or report\r\n * @param {string} signatureDataUrl - The signature image as data URL\r\n * @param {Object} pdfDoc - The PDF document object\r\n * @param {number} x - X coordinate for signature placement\r\n * @param {number} y - Y coordinate for signature placement\r\n * @param {number} width - Width of the signature\r\n * @param {number} height - Height of the signature\r\n */\r\nexport const insertSignatureIntoPdf = (signatureDataUrl, pdfDoc, x, y, width, height) => {\r\n  if (!signatureDataUrl) {\r\n    console.warn('No signature provided for PDF insertion');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // Convert data URL to base64\r\n    const base64Data = signatureDataUrl.split(',')[1];\r\n    \r\n    // Add image to PDF\r\n    pdfDoc.image(base64Data, x, y, {\r\n      width: width,\r\n      height: height,\r\n      fit: [width, height]\r\n    });\r\n  } catch (error) {\r\n    console.error('Error inserting signature into PDF:', error);\r\n  }\r\n};\r\n\r\n/**\r\n * Validate signature image\r\n * @param {File} file - The signature file to validate\r\n * @returns {Object} - Validation result with isValid boolean and error message\r\n */\r\nexport const validateSignatureFile = (file) => {\r\n  const maxSize = 5 * 1024 * 1024; // 5MB\r\n  const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif'];\r\n  \r\n  if (!file) {\r\n    return { isValid: false, error: 'No file selected' };\r\n  }\r\n  \r\n  if (!allowedTypes.includes(file.type)) {\r\n    return { isValid: false, error: 'Please select a valid image file (JPEG, PNG, or GIF)' };\r\n  }\r\n  \r\n  if (file.size > maxSize) {\r\n    return { isValid: false, error: 'File size must be less than 5MB' };\r\n  }\r\n  \r\n  return { isValid: true, error: null };\r\n};\r\n\r\n/**\r\n * Compress signature image to reduce file size\r\n * @param {string} dataUrl - The signature image as data URL\r\n * @param {number} maxWidth - Maximum width for the compressed image\r\n * @param {number} maxHeight - Maximum height for the compressed image\r\n * @param {number} quality - Image quality (0-1)\r\n * @returns {Promise<string>} - Compressed image as data URL\r\n */\r\nexport const compressSignatureImage = (dataUrl, maxWidth = 300, maxHeight = 150, quality = 0.8) => {\r\n  return new Promise((resolve, reject) => {\r\n    const img = new Image();\r\n    img.onload = () => {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d');\r\n      \r\n      // Calculate new dimensions\r\n      let { width, height } = img;\r\n      if (width > maxWidth) {\r\n        height = (height * maxWidth) / width;\r\n        width = maxWidth;\r\n      }\r\n      if (height > maxHeight) {\r\n        width = (width * maxHeight) / height;\r\n        height = maxHeight;\r\n      }\r\n      \r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      \r\n      // Draw and compress\r\n      ctx.drawImage(img, 0, 0, width, height);\r\n      const compressedDataUrl = canvas.toDataURL('image/jpeg', quality);\r\n      \r\n      resolve(compressedDataUrl);\r\n    };\r\n    \r\n    img.onerror = () => {\r\n      reject(new Error('Failed to load image'));\r\n    };\r\n    \r\n    img.src = dataUrl;\r\n  });\r\n}; ","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogContentText,\r\n  TextField,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  Stack,\r\n  TableSortLabel,\r\n  Chip,\r\n  alpha,\r\n  Switch,\r\n  FormControlLabel,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n} from \"@mui/material\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\r\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport RemoveIcon from \"@mui/icons-material/Remove\";\r\nimport { USER_LEVELS } from \"../../data/userData\";\r\nimport Header from \"../../components/Header\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { tokens } from \"../../theme\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { userService } from \"../../services/api\";\r\nimport TruncatedCell from \"../../components/TruncatedCell\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { hasPermission } from \"../../config/permissions\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport {\r\n  validateSignatureFile,\r\n  compressSignatureImage,\r\n} from \"../../utils/signatureUtils\";\r\n\r\nconst USERS_KEY = \"ldc_users\";\r\n\r\nconst emptyForm = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  phone: \"\",\r\n  role: \"employee\",\r\n  isActive: true,\r\n  licences: [],\r\n  signature: \"\",\r\n};\r\n\r\nconst Users = () => {\r\n  const navigate = useNavigate();\r\n  const { currentUser } = useAuth();\r\n  const [users, setUsers] = useState([]);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n  const [statusDialogOpen, setStatusDialogOpen] = useState(false);\r\n  const [form, setForm] = useState(emptyForm);\r\n  const [editForm, setEditForm] = useState(emptyForm);\r\n  const [editId, setEditId] = useState(null);\r\n  const [statusChangeId, setStatusChangeId] = useState(null);\r\n  const [statusChangeType, setStatusChangeType] = useState(null);\r\n  const [sortBy, setSortBy] = useState(\"lastName\");\r\n  const [sortDir, setSortDir] = useState(\"asc\");\r\n  const [showInactive, setShowInactive] = useState(false);\r\n  const theme = useTheme();\r\n\r\n  // Delete user state\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [userToDelete, setUserToDelete] = useState(null);\r\n\r\n  // Fetch users from the API on mount\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await userService.getAll();\r\n        console.log(\"Users data from API:\", response.data);\r\n        // Transform the data to ensure role is properly set\r\n        const transformedUsers = response.data.map((user) => ({\r\n          ...user,\r\n          role: user.role || \"employee\",\r\n        }));\r\n        setUsers(transformedUsers);\r\n      } catch (error) {\r\n        console.error(\"Error fetching users:\", error);\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleEditChange = (e) => {\r\n    setEditForm({ ...editForm, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Handle LAA licence changes\r\n  const handleLaaLicenceChange = (index, field, value) => {\r\n    const updatedLicences = [...form.licences];\r\n    updatedLicences[index] = { ...updatedLicences[index], [field]: value };\r\n    setForm({ ...form, licences: updatedLicences });\r\n  };\r\n\r\n  const handleEditLaaLicenceChange = (index, field, value) => {\r\n    const updatedLicences = [...editForm.licences];\r\n    updatedLicences[index] = { ...updatedLicences[index], [field]: value };\r\n    setEditForm({ ...editForm, licences: updatedLicences });\r\n  };\r\n\r\n  const addLaaLicence = () => {\r\n    setForm({\r\n      ...form,\r\n      licences: [\r\n        ...form.licences,\r\n        { state: \"\", licenceNumber: \"\", licenceType: \"\" },\r\n      ],\r\n    });\r\n  };\r\n\r\n  const addEditLaaLicence = () => {\r\n    setEditForm({\r\n      ...editForm,\r\n      licences: [\r\n        ...editForm.licences,\r\n        { state: \"\", licenceNumber: \"\", licenceType: \"\" },\r\n      ],\r\n    });\r\n  };\r\n\r\n  const removeLaaLicence = (index) => {\r\n    const updatedLicences = form.licences.filter((_, i) => i !== index);\r\n    setForm({ ...form, licences: updatedLicences });\r\n  };\r\n\r\n  const removeEditLaaLicence = (index) => {\r\n    const updatedLicences = editForm.licences.filter((_, i) => i !== index);\r\n    setEditForm({ ...editForm, licences: updatedLicences });\r\n  };\r\n\r\n  // Handle signature file upload\r\n  const handleSignatureUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      // Validate file\r\n      const validation = validateSignatureFile(file);\r\n      if (!validation.isValid) {\r\n        alert(validation.error);\r\n        return;\r\n      }\r\n\r\n      const reader = new FileReader();\r\n      reader.onload = async (event) => {\r\n        try {\r\n          // Compress the image\r\n          const compressedSignature = await compressSignatureImage(\r\n            event.target.result\r\n          );\r\n          setForm({ ...form, signature: compressedSignature });\r\n        } catch (error) {\r\n          console.error(\"Error compressing signature:\", error);\r\n          // Fallback to original if compression fails\r\n          setForm({ ...form, signature: event.target.result });\r\n        }\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleEditSignatureUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      // Validate file\r\n      const validation = validateSignatureFile(file);\r\n      if (!validation.isValid) {\r\n        alert(validation.error);\r\n        return;\r\n      }\r\n\r\n      const reader = new FileReader();\r\n      reader.onload = async (event) => {\r\n        try {\r\n          // Compress the image\r\n          const compressedSignature = await compressSignatureImage(\r\n            event.target.result\r\n          );\r\n          setEditForm({ ...editForm, signature: compressedSignature });\r\n        } catch (error) {\r\n          console.error(\"Error compressing signature:\", error);\r\n          // Fallback to original if compression fails\r\n          setEditForm({ ...editForm, signature: event.target.result });\r\n        }\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleAddUser = async (e) => {\r\n    e.preventDefault();\r\n    if (!form.firstName.trim() || !form.lastName.trim() || !form.email.trim())\r\n      return;\r\n\r\n    try {\r\n      const userData = {\r\n        ...form,\r\n        password: \"defaultPassword123\", // You might want to implement a proper password setup\r\n        phone: form.phone.trim() || \"\", // Ensure phone is included and trimmed\r\n        licences: form.licences.filter(\r\n          (licence) =>\r\n            licence.state && licence.licenceNumber && licence.licenceType\r\n        ), // Only include valid licences\r\n        signature: form.signature || \"\",\r\n      };\r\n      console.log(\"Creating user with data:\", userData);\r\n      const response = await userService.create(userData);\r\n      setUsers([response.data, ...users]);\r\n      setForm(emptyForm);\r\n      setDialogOpen(false);\r\n    } catch (error) {\r\n      console.error(\"Error adding user:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEditUser = (user) => {\r\n    console.log(\"Editing user:\", user);\r\n    setEditId(user._id);\r\n    setEditForm({\r\n      firstName: user.firstName || \"\",\r\n      lastName: user.lastName || \"\",\r\n      email: user.email || \"\",\r\n      phone: user.phone || \"\",\r\n      role: user.role || \"employee\",\r\n      isActive: user.isActive,\r\n      licences: user.licences || [],\r\n      signature: user.signature || \"\",\r\n    });\r\n    setEditDialogOpen(true);\r\n  };\r\n\r\n  const handleSaveEdit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const updateData = {\r\n        firstName: editForm.firstName,\r\n        lastName: editForm.lastName,\r\n        email: editForm.email,\r\n        phone: editForm.phone.trim() || \"\",\r\n        role: editForm.role,\r\n        isActive: editForm.isActive,\r\n        licences: editForm.licences.filter(\r\n          (licence) =>\r\n            licence.state && licence.licenceNumber && licence.licenceType\r\n        ), // Only include valid licences\r\n        signature: editForm.signature || \"\",\r\n      };\r\n      console.log(\"Updating user with data:\", updateData);\r\n      const response = await userService.update(editId, updateData);\r\n      setUsers(users.map((u) => (u._id === editId ? response.data : u)));\r\n      setEditDialogOpen(false);\r\n      setEditId(null);\r\n      setEditForm(emptyForm);\r\n    } catch (error) {\r\n      console.error(\"Error updating user:\", error);\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = (userId, newStatus) => {\r\n    // Check if trying to deactivate the last admin\r\n    if (!newStatus) {\r\n      const userToDeactivate = users.find((u) => u._id === userId);\r\n      if (userToDeactivate.role === \"admin\") {\r\n        const activeAdmins = users.filter(\r\n          (u) => u.isActive && u.role === \"admin\"\r\n        );\r\n        if (activeAdmins.length <= 1) {\r\n          setStatusDialogOpen(true);\r\n          setStatusChangeId(userId);\r\n          setStatusChangeType(newStatus);\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    setStatusChangeId(userId);\r\n    setStatusChangeType(newStatus);\r\n    setStatusDialogOpen(true);\r\n  };\r\n\r\n  const confirmStatusChange = async () => {\r\n    const userToDeactivate = users.find((u) => u._id === statusChangeId);\r\n    if (!statusChangeType && userToDeactivate.role === \"admin\") {\r\n      const activeAdmins = users.filter(\r\n        (u) => u.isActive && u.role === \"admin\"\r\n      );\r\n      if (activeAdmins.length <= 1) {\r\n        setStatusDialogOpen(false);\r\n        setStatusChangeId(null);\r\n        setStatusChangeType(null);\r\n        return;\r\n      }\r\n    }\r\n\r\n    try {\r\n      const response = await userService.update(statusChangeId, {\r\n        isActive: statusChangeType,\r\n      });\r\n      setUsers(\r\n        users.map((u) => (u._id === statusChangeId ? response.data : u))\r\n      );\r\n      setStatusDialogOpen(false);\r\n      setStatusChangeId(null);\r\n      setStatusChangeType(null);\r\n    } catch (error) {\r\n      console.error(\"Error updating user status:\", error);\r\n    }\r\n  };\r\n\r\n  // Sorting\r\n  const handleSort = (col) => {\r\n    if (sortBy === col) {\r\n      setSortDir(sortDir === \"asc\" ? \"desc\" : \"asc\");\r\n    } else {\r\n      setSortBy(col);\r\n      setSortDir(\"asc\");\r\n    }\r\n  };\r\n\r\n  const sortedUsers = [...users].sort((a, b) => {\r\n    let valA = a[sortBy],\r\n      valB = b[sortBy];\r\n    if (valA < valB) return sortDir === \"asc\" ? -1 : 1;\r\n    if (valA > valB) return sortDir === \"asc\" ? 1 : -1;\r\n    return 0;\r\n  });\r\n\r\n  const handleViewTimesheets = (userId) => {\r\n    navigate(`/timesheets/review?userId=${userId}`);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      field: \"name\",\r\n      headerName: \"Name\",\r\n      flex: 1.5,\r\n      maxWidth: 180,\r\n      renderCell: (params) => {\r\n        const fullName = `${params.row.firstName || \"\"} ${\r\n          params.row.lastName || \"\"\r\n        }`.trim();\r\n        return <TruncatedCell value={fullName} />;\r\n      },\r\n    },\r\n    {\r\n      field: \"email\",\r\n      headerName: \"Email\",\r\n      flex: 1,\r\n      renderCell: (params) => <TruncatedCell value={params.value} />,\r\n    },\r\n    {\r\n      field: \"role\",\r\n      headerName: \"User Level\",\r\n      flex: 1,\r\n      minWidth: 120,\r\n      renderCell: (params) => {\r\n        const role = params.row.role || \"employee\";\r\n        const formattedRole = role.charAt(0).toUpperCase() + role.slice(1);\r\n        return <TruncatedCell value={formattedRole} />;\r\n      },\r\n    },\r\n    {\r\n      field: \"licences\",\r\n      headerName: \"Licences\",\r\n      flex: 1.5,\r\n      minWidth: 150,\r\n      renderCell: (params) => {\r\n        const licences = params.row.licences || [];\r\n        if (licences.length === 0) {\r\n          return (\r\n            <Typography variant=\"body2\" color=\"textSecondary\">\r\n              No licences\r\n            </Typography>\r\n          );\r\n        }\r\n        return (\r\n          <Box>\r\n            {licences.map((licence, index) => (\r\n              <Typography key={index} variant=\"body2\">\r\n                {licence.licenceType}\r\n              </Typography>\r\n            ))}\r\n          </Box>\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      field: \"isActive\",\r\n      headerName: \"Status\",\r\n      flex: 1,\r\n      maxWidth: 100,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value ? \"Active\" : \"Inactive\"}\r\n          color={params.value ? \"success\" : \"error\"}\r\n          sx={{ color: \"white\" }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      field: \"actions\",\r\n      headerName: \"Actions\",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      renderCell: (params) => (\r\n        <Box>\r\n          <IconButton onClick={() => handleEditUser(params.row)}>\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            onClick={() =>\r\n              handleStatusChange(params.row._id, !params.row.isActive)\r\n            }\r\n            title={params.row.isActive ? \"Deactivate User\" : \"Activate User\"}\r\n          >\r\n            {params.row.isActive ? <DeleteIcon /> : <CheckCircleIcon />}\r\n          </IconButton>\r\n          {hasPermission(currentUser, \"timesheets.approve\") &&\r\n            params.row._id !== currentUser._id && (\r\n              <IconButton\r\n                onClick={() => handleViewTimesheets(params.row._id)}\r\n                title=\"View Timesheets\"\r\n              >\r\n                <AccessTimeIcon />\r\n              </IconButton>\r\n            )}\r\n        </Box>\r\n      ),\r\n      sortable: false,\r\n      filterable: false,\r\n    },\r\n  ];\r\n\r\n  // Filter users based on active/inactive status\r\n  const filteredUsers = users.filter((user) => showInactive || user.isActive);\r\n\r\n  return (\r\n    <Box m=\"20px\">\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Header title=\"USER MANAGEMENT\" subtitle=\"Manage your users\" />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => setDialogOpen(true)}\r\n          sx={{\r\n            backgroundColor: theme.palette.secondary.main,\r\n            \"&:hover\": { backgroundColor: theme.palette.secondary.dark },\r\n          }}\r\n        >\r\n          Add User\r\n        </Button>\r\n      </Box>\r\n\r\n      {/* Users Table with Toggle */}\r\n      <Box mt=\"20px\">\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          mb=\"10px\"\r\n        >\r\n          <Typography variant=\"h5\" color=\"black\">\r\n            Users\r\n          </Typography>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={showInactive}\r\n                onChange={(e) => setShowInactive(e.target.checked)}\r\n                color=\"secondary\"\r\n              />\r\n            }\r\n            label=\"Show Inactive Users\"\r\n            sx={{ color: \"black\" }}\r\n          />\r\n        </Box>\r\n        <Box\r\n          height=\"75vh\"\r\n          sx={{\r\n            \"& .MuiDataGrid-root\": { border: \"none\" },\r\n            \"& .MuiDataGrid-cell\": {\r\n              borderBottom: `1px solid ${theme.palette.divider}`,\r\n            },\r\n            \"& .MuiDataGrid-columnHeaders\": {\r\n              backgroundColor: theme.palette.primary.dark,\r\n              borderBottom: \"none\",\r\n            },\r\n            \"& .MuiDataGrid-virtualScroller\": {\r\n              backgroundColor: theme.palette.background.default,\r\n            },\r\n            \"& .MuiDataGrid-footerContainer\": {\r\n              borderTop: \"none\",\r\n              backgroundColor: theme.palette.primary.dark,\r\n            },\r\n            \"& .MuiCheckbox-root\": {\r\n              color: `${theme.palette.secondary.main} !important`,\r\n            },\r\n            \"& .MuiDataGrid-row:nth-of-type(even)\": {\r\n              backgroundColor: \"#f8f9fa\",\r\n            },\r\n            \"& .MuiDataGrid-row:nth-of-type(odd)\": {\r\n              backgroundColor: \"#ffffff\",\r\n            },\r\n            \"& .MuiDataGrid-row:hover\": {\r\n              backgroundColor: \"#e3f2fd\",\r\n            },\r\n          }}\r\n        >\r\n          <DataGrid\r\n            rows={filteredUsers}\r\n            columns={columns}\r\n            getRowId={(row) => row._id}\r\n            pageSize={10}\r\n            rowsPerPageOptions={[10]}\r\n            autoHeight\r\n            disableSelectionOnClick\r\n          />\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Add User Dialog */}\r\n      <Dialog\r\n        open={dialogOpen}\r\n        onClose={() => setDialogOpen(false)}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Add New User</DialogTitle>\r\n        <form onSubmit={handleAddUser}>\r\n          <DialogContent>\r\n            <Stack direction=\"row\" spacing={2} sx={{ mb: 2 }}>\r\n              <TextField\r\n                label=\"First Name\"\r\n                name=\"firstName\"\r\n                value={form.firstName}\r\n                onChange={handleChange}\r\n                required\r\n                sx={{ flex: 1 }}\r\n              />\r\n              <TextField\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                value={form.lastName}\r\n                onChange={handleChange}\r\n                required\r\n                sx={{ flex: 1 }}\r\n              />\r\n            </Stack>\r\n            <Stack direction=\"row\" spacing={2} sx={{ mb: 2 }}>\r\n              <TextField\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={form.email}\r\n                onChange={handleChange}\r\n                required\r\n                sx={{ flex: 1 }}\r\n              />\r\n              <TextField\r\n                label=\"Phone\"\r\n                name=\"phone\"\r\n                value={form.phone}\r\n                onChange={handleChange}\r\n                sx={{ flex: 1 }}\r\n              />\r\n            </Stack>\r\n            <FormControl fullWidth>\r\n              <InputLabel>User Level</InputLabel>\r\n              <Select\r\n                label=\"User Level\"\r\n                name=\"role\"\r\n                value={form.role}\r\n                onChange={handleChange}\r\n              >\r\n                {USER_LEVELS.map((level) => (\r\n                  <MenuItem key={level} value={level}>\r\n                    {level.charAt(0).toUpperCase() + level.slice(1)}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            {/* LAA Licences Section */}\r\n            <Box sx={{ mt: 3 }}>\r\n              <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n                Licences\r\n              </Typography>\r\n              {form.licences.map((licence, index) => (\r\n                <Card key={index} sx={{ mb: 2, p: 2 }}>\r\n                  <CardContent>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={4}>\r\n                        <FormControl fullWidth size=\"small\">\r\n                          <InputLabel>Licence Type</InputLabel>\r\n                          <Select\r\n                            label=\"Licence Type\"\r\n                            value={licence.licenceType}\r\n                            onChange={(e) =>\r\n                              handleLaaLicenceChange(\r\n                                index,\r\n                                \"licenceType\",\r\n                                e.target.value\r\n                              )\r\n                            }\r\n                          >\r\n                            <MenuItem value=\"Asbestos Assessor\">\r\n                              Asbestos Assessor\r\n                            </MenuItem>\r\n                            <MenuItem value=\"White Card\">White Card</MenuItem>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </Grid>\r\n                      <Grid item xs={4}>\r\n                        <TextField\r\n                          label=\"State\"\r\n                          value={licence.state}\r\n                          onChange={(e) =>\r\n                            handleLaaLicenceChange(\r\n                              index,\r\n                              \"state\",\r\n                              e.target.value\r\n                            )\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={4}>\r\n                        <TextField\r\n                          label=\"Licence Number\"\r\n                          value={licence.licenceNumber}\r\n                          onChange={(e) =>\r\n                            handleLaaLicenceChange(\r\n                              index,\r\n                              \"licenceNumber\",\r\n                              e.target.value\r\n                            )\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <IconButton\r\n                      onClick={() => removeLaaLicence(index)}\r\n                      color=\"error\"\r\n                      size=\"small\"\r\n                    >\r\n                      <RemoveIcon />\r\n                    </IconButton>\r\n                  </CardActions>\r\n                </Card>\r\n              ))}\r\n              <Button\r\n                startIcon={<AddIcon />}\r\n                onClick={addLaaLicence}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n              >\r\n                Add Licence\r\n              </Button>\r\n            </Box>\r\n\r\n            {/* Signature Upload Section */}\r\n            <Box sx={{ mt: 3 }}>\r\n              <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n                Signature\r\n              </Typography>\r\n              <input\r\n                accept=\"image/*\"\r\n                style={{ display: \"none\" }}\r\n                id=\"signature-upload\"\r\n                type=\"file\"\r\n                onChange={handleSignatureUpload}\r\n              />\r\n              <label htmlFor=\"signature-upload\">\r\n                <Button variant=\"outlined\" component=\"span\">\r\n                  Upload Signature\r\n                </Button>\r\n              </label>\r\n              {form.signature && (\r\n                <Box sx={{ mt: 2 }}>\r\n                  <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n                    Current Signature:\r\n                  </Typography>\r\n                  <Box\r\n                    component=\"img\"\r\n                    src={form.signature}\r\n                    alt=\"Signature preview\"\r\n                    sx={{\r\n                      maxWidth: 200,\r\n                      maxHeight: 100,\r\n                      border: \"1px solid #ddd\",\r\n                      borderRadius: 1,\r\n                    }}\r\n                  />\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setDialogOpen(false)} color=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              Add User\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n\r\n      {/* Edit User Dialog */}\r\n      <Dialog\r\n        open={editDialogOpen}\r\n        onClose={() => setEditDialogOpen(false)}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Edit User</DialogTitle>\r\n        <form onSubmit={handleSaveEdit}>\r\n          <DialogContent>\r\n            <Stack direction=\"row\" spacing={2} sx={{ mb: 2 }}>\r\n              <TextField\r\n                label=\"First Name\"\r\n                name=\"firstName\"\r\n                value={editForm.firstName}\r\n                onChange={handleEditChange}\r\n                required\r\n                sx={{ flex: 1 }}\r\n              />\r\n              <TextField\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                value={editForm.lastName}\r\n                onChange={handleEditChange}\r\n                required\r\n                sx={{ flex: 1 }}\r\n              />\r\n            </Stack>\r\n            <Stack direction=\"row\" spacing={2} sx={{ mb: 2 }}>\r\n              <TextField\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={editForm.email}\r\n                onChange={handleEditChange}\r\n                required\r\n                sx={{ flex: 1 }}\r\n              />\r\n              <TextField\r\n                label=\"Phone\"\r\n                name=\"phone\"\r\n                value={editForm.phone || \"\"}\r\n                onChange={handleEditChange}\r\n                sx={{ flex: 1 }}\r\n              />\r\n            </Stack>\r\n            <Stack direction=\"row\" spacing={2} sx={{ mb: 2 }}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>User Level</InputLabel>\r\n                <Select\r\n                  label=\"User Level\"\r\n                  name=\"role\"\r\n                  value={editForm.role}\r\n                  onChange={handleEditChange}\r\n                >\r\n                  {USER_LEVELS.map((level) => (\r\n                    <MenuItem key={level} value={level}>\r\n                      {level.charAt(0).toUpperCase() + level.slice(1)}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    checked={editForm.isActive}\r\n                    onChange={(e) =>\r\n                      setEditForm({ ...editForm, isActive: e.target.checked })\r\n                    }\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Active\"\r\n                sx={{ minWidth: \"120px\" }}\r\n              />\r\n            </Stack>\r\n\r\n            {/* LAA Licences Section */}\r\n            <Box sx={{ mt: 3 }}>\r\n              <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n                Licences\r\n              </Typography>\r\n              {editForm.licences.map((licence, index) => (\r\n                <Card key={index} sx={{ mb: 2, p: 2 }}>\r\n                  <CardContent>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={4}>\r\n                        <FormControl fullWidth size=\"small\">\r\n                          <InputLabel>Licence Type</InputLabel>\r\n                          <Select\r\n                            label=\"Licence Type\"\r\n                            value={licence.licenceType}\r\n                            onChange={(e) =>\r\n                              handleEditLaaLicenceChange(\r\n                                index,\r\n                                \"licenceType\",\r\n                                e.target.value\r\n                              )\r\n                            }\r\n                          >\r\n                            <MenuItem value=\"Asbestos Assessor\">\r\n                              Asbestos Assessor\r\n                            </MenuItem>\r\n                            <MenuItem value=\"White Card\">White Card</MenuItem>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </Grid>\r\n                      <Grid item xs={4}>\r\n                        <TextField\r\n                          label=\"State\"\r\n                          value={licence.state}\r\n                          onChange={(e) =>\r\n                            handleEditLaaLicenceChange(\r\n                              index,\r\n                              \"state\",\r\n                              e.target.value\r\n                            )\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={4}>\r\n                        <TextField\r\n                          label=\"Licence Number\"\r\n                          value={licence.licenceNumber}\r\n                          onChange={(e) =>\r\n                            handleEditLaaLicenceChange(\r\n                              index,\r\n                              \"licenceNumber\",\r\n                              e.target.value\r\n                            )\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <IconButton\r\n                      onClick={() => removeEditLaaLicence(index)}\r\n                      color=\"error\"\r\n                      size=\"small\"\r\n                    >\r\n                      <RemoveIcon />\r\n                    </IconButton>\r\n                  </CardActions>\r\n                </Card>\r\n              ))}\r\n              <Button\r\n                startIcon={<AddIcon />}\r\n                onClick={addEditLaaLicence}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n              >\r\n                Add Licence\r\n              </Button>\r\n            </Box>\r\n\r\n            {/* Signature Upload Section */}\r\n            <Box sx={{ mt: 3 }}>\r\n              <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n                Signature\r\n              </Typography>\r\n              <input\r\n                accept=\"image/*\"\r\n                style={{ display: \"none\" }}\r\n                id=\"edit-signature-upload\"\r\n                type=\"file\"\r\n                onChange={handleEditSignatureUpload}\r\n              />\r\n              <label htmlFor=\"edit-signature-upload\">\r\n                <Button variant=\"outlined\" component=\"span\">\r\n                  Upload Signature\r\n                </Button>\r\n              </label>\r\n              {editForm.signature && (\r\n                <Box sx={{ mt: 2 }}>\r\n                  <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n                    Current Signature:\r\n                  </Typography>\r\n                  <Box\r\n                    component=\"img\"\r\n                    src={editForm.signature}\r\n                    alt=\"Signature preview\"\r\n                    sx={{\r\n                      maxWidth: 200,\r\n                      maxHeight: 100,\r\n                      border: \"1px solid #ddd\",\r\n                      borderRadius: 1,\r\n                    }}\r\n                  />\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setEditDialogOpen(false)} color=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              Save Changes\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n\r\n      {/* Status Change Confirmation Dialog */}\r\n      <Dialog\r\n        open={statusDialogOpen}\r\n        onClose={() => setStatusDialogOpen(false)}\r\n      >\r\n        <DialogTitle>\r\n          {statusChangeType ? \"Confirm Restore\" : \"Confirm Deactivate\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {statusChangeType\r\n              ? \"Are you sure you want to restore this user? They will regain access to the system.\"\r\n              : users.find((u) => u._id === statusChangeId)?.role === \"admin\" &&\r\n                users.filter((u) => u.isActive && u.role === \"admin\").length <=\r\n                  1\r\n              ? \"Cannot deactivate the last active admin user. Please ensure another admin user is active before deactivating this user.\"\r\n              : \"Are you sure you want to deactivate this user? They will lose access to the system but can be restored later.\"}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setStatusDialogOpen(false)} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          {!(\r\n            users.find((u) => u._id === statusChangeId)?.role === \"admin\" &&\r\n            users.filter((u) => u.isActive && u.role === \"admin\").length <= 1\r\n          ) && (\r\n            <Button\r\n              onClick={confirmStatusChange}\r\n              color={statusChangeType ? \"success\" : \"error\"}\r\n              variant=\"contained\"\r\n            >\r\n              {statusChangeType ? \"Restore\" : \"Deactivate\"}\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react';\r\nimport { Box, Typography, Tooltip } from '@mui/material';\r\n\r\nconst TruncatedCell = ({ value, tooltip = true }) => {\r\n  if (!value) return null;\r\n\r\n  const content = (\r\n    <Box\r\n      sx={{\r\n        width: '100%',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap',\r\n      }}\r\n    >\r\n      <Typography variant=\"body2\" noWrap>\r\n        {value}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n\r\n  if (tooltip) {\r\n    return (\r\n      <Tooltip title={value} placement=\"top\">\r\n        {content}\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  return content;\r\n};\r\n\r\nexport default TruncatedCell; ","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13H5v-2h14z\"\n}), 'Remove');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n  const {\n      className\n    } = props,\n    ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;"],"names":["getCardActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionsRoot","styled","name","overridesResolver","props","styles","ownerState","root","disableSpacing","spacing","_ref","_extends","display","alignItems","padding","marginLeft","React","inProps","ref","useDefaultProps","className","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","USER_LEVELS","validateSignatureFile","file","includes","type","size","isValid","error","compressSignatureImage","dataUrl","maxWidth","arguments","length","undefined","maxHeight","quality","Promise","resolve","reject","img","Image","onload","canvas","document","createElement","ctx","getContext","width","height","drawImage","compressedDataUrl","toDataURL","onerror","Error","src","emptyForm","firstName","lastName","email","phone","role","isActive","licences","signature","Users","_users$find","_users$find2","navigate","useNavigate","currentUser","useAuth","users","setUsers","useState","dialogOpen","setDialogOpen","editDialogOpen","setEditDialogOpen","statusDialogOpen","setStatusDialogOpen","form","setForm","editForm","setEditForm","editId","setEditId","statusChangeId","setStatusChangeId","statusChangeType","setStatusChangeType","sortBy","setSortBy","sortDir","setSortDir","showInactive","setShowInactive","theme","useTheme","deleteDialogOpen","setDeleteDialogOpen","userToDelete","setUserToDelete","useEffect","async","response","userService","getAll","console","log","data","transformedUsers","map","user","_objectSpread","fetchUsers","handleChange","e","target","value","handleEditChange","handleLaaLicenceChange","index","field","updatedLicences","handleEditLaaLicenceChange","columns","sort","a","b","valA","valB","headerName","flex","renderCell","params","fullName","concat","row","trim","TruncatedCell","minWidth","formattedRole","charAt","toUpperCase","slice","Typography","variant","color","children","Box","licence","licenceType","Chip","label","sx","_jsxs","IconButton","onClick","handleEditUser","_id","EditIcon","handleStatusChange","userId","newStatus","find","u","filter","title","DeleteIcon","CheckCircleIcon","hasPermission","handleViewTimesheets","AccessTimeIcon","sortable","filterable","filteredUsers","m","justifyContent","Header","subtitle","Button","backgroundColor","palette","secondary","main","dark","mt","mb","FormControlLabel","control","Switch","checked","onChange","border","borderBottom","divider","primary","background","default","borderTop","DataGrid","rows","getRowId","pageSize","rowsPerPageOptions","autoHeight","disableSelectionOnClick","Dialog","open","onClose","fullWidth","DialogTitle","onSubmit","preventDefault","userData","password","state","licenceNumber","create","DialogContent","Stack","direction","TextField","required","FormControl","InputLabel","Select","level","MenuItem","Card","p","CardContent","Grid","container","item","xs","CardActions","_","i","removeLaaLicence","RemoveIcon","startIcon","AddIcon","addLaaLicence","accept","style","id","files","validation","alert","reader","FileReader","compressedSignature","event","result","readAsDataURL","htmlFor","component","alt","borderRadius","DialogActions","updateData","update","removeEditLaaLicence","addEditLaaLicence","DialogContentText","userToDeactivate","tooltip","content","overflow","textOverflow","whiteSpace","noWrap","Tooltip","placement","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","jsx","d","getDialogContentTextUtilityClass","DialogContentTextRoot","shouldForwardProp","prop","rootShouldForwardProp","composedClasses"],"sourceRoot":""}