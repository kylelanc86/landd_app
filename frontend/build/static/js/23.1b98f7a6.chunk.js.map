{"version":3,"file":"static/js/23.1b98f7a6.chunk.js","mappings":"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","sources":["scenes/surveys/asbestos/assessment-samples.jsx","../node_modules/@mui/icons-material/esm/PhotoCamera.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  useTheme,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@mui/material\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { PhotoCamera, ArrowBack } from \"@mui/icons-material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AssessmentSamples = () => {\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const [sampleNumber, setSampleNumber] = useState(\"\");\r\n  const [sampleLocation, setSampleLocation] = useState(\"\");\r\n  const [materialDescription, setMaterialDescription] = useState(\"\");\r\n  const [asbestosContent, setAsbestosContent] = useState(\"\");\r\n  const [samples, setSamples] = useState([]);\r\n\r\n  const handleAsbestosContentChange = (event) => {\r\n    setAsbestosContent(event.target.value);\r\n  };\r\n\r\n  const handleSaveAndClose = () => {\r\n    // Save the sample data\r\n    const newSample = {\r\n      sampleNumber,\r\n      sampleLocation,\r\n      materialDescription,\r\n      asbestosContent,\r\n    };\r\n    setSamples([...samples, newSample]);\r\n    localStorage.setItem(\r\n      \"asbestos_samples\",\r\n      JSON.stringify([...samples, newSample])\r\n    );\r\n    navigate(\"/asbestos-assessment\");\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate(\"/asbestos-assessment\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Load samples from localStorage\r\n    const storedSamples = localStorage.getItem(\"asbestos_samples\");\r\n    if (storedSamples) {\r\n      setSamples(JSON.parse(storedSamples));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Box sx={{ p: { xs: 2, sm: 3, md: 4 } }}>\r\n      <Typography variant=\"h4\" sx={{ mb: 4 }}>\r\n        Assessment Samples\r\n      </Typography>\r\n\r\n      {/* Assessment Details Grid */}\r\n      <Paper sx={{ p: 3, mb: 3 }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Assessment Details\r\n        </Typography>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={4}>\r\n            <Typography variant=\"body1\">\r\n              <strong>Job ID:</strong> 12345\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Typography variant=\"body1\">\r\n              <strong>Site Address:</strong> 123 Main St, City\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Typography variant=\"body1\">\r\n              <strong>Assessor:</strong> John Doe\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n\r\n      {/* Sample Form */}\r\n      <Paper sx={{ p: 3, mb: 3 }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Add Sample\r\n        </Typography>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Sample Number\"\r\n              value={sampleNumber}\r\n              onChange={(e) => setSampleNumber(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Sample Location\"\r\n              value={sampleLocation}\r\n              onChange={(e) => setSampleLocation(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Material Description\"\r\n              value={materialDescription}\r\n              onChange={(e) => setMaterialDescription(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <FormControl fullWidth>\r\n              <InputLabel>Asbestos Content</InputLabel>\r\n              <Select\r\n                value={asbestosContent}\r\n                onChange={handleAsbestosContentChange}\r\n                label=\"Asbestos Content\"\r\n              >\r\n                <MenuItem value=\"no_asbestos\">No Asbestos</MenuItem>\r\n                <MenuItem value=\"chrysotile\">Chrysotile Asbestos</MenuItem>\r\n                <MenuItem value=\"amosite\">Amosite Asbestos</MenuItem>\r\n                <MenuItem value=\"crocidolite\">Crocidolite Asbestos</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <Box sx={{ mt: 1, display: \"flex\", gap: 2 }}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                startIcon={<PhotoCamera />}\r\n                onClick={() => {\r\n                  // Check if the device has a camera\r\n                  if (\r\n                    navigator.mediaDevices &&\r\n                    navigator.mediaDevices.getUserMedia\r\n                  ) {\r\n                    navigator.mediaDevices\r\n                      .getUserMedia({ video: true })\r\n                      .then((stream) => {\r\n                        // Camera is available, open it\r\n                        const input = document.createElement(\"input\");\r\n                        input.type = \"file\";\r\n                        input.accept = \"image/*\";\r\n                        input.capture = \"environment\"; // Use camera\r\n                        input.onchange = (e) => {\r\n                          const file = e.target.files[0];\r\n                          if (file) {\r\n                            // Handle the photo file here\r\n                            console.log(\"Photo taken:\", file);\r\n                          }\r\n                        };\r\n                        input.click();\r\n                      })\r\n                      .catch((err) => {\r\n                        // Camera is not available\r\n                        alert(\"Device camera not detected.\");\r\n                      });\r\n                  } else {\r\n                    alert(\"Device camera not detected.\");\r\n                  }\r\n                }}\r\n              >\r\n                Take Photo\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                startIcon={<PhotoCamera />}\r\n                onClick={() => {\r\n                  // Open file upload dialog\r\n                  const input = document.createElement(\"input\");\r\n                  input.type = \"file\";\r\n                  input.accept = \"image/*\";\r\n                  input.onchange = (e) => {\r\n                    const file = e.target.files[0];\r\n                    if (file) {\r\n                      // Handle the photo file here\r\n                      console.log(\"Photo uploaded:\", file);\r\n                    }\r\n                  };\r\n                  input.click();\r\n                }}\r\n              >\r\n                Upload Photo\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n\r\n      {/* Additional Asbestos Details Form */}\r\n      {asbestosContent !== \"no_asbestos\" && (\r\n        <Paper sx={{ p: 3, mb: 3 }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Asbestos Details\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Asbestos Type\"\r\n                placeholder=\"Enter asbestos type\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Condition\"\r\n                placeholder=\"Enter condition\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField fullWidth label=\"Risk\" placeholder=\"Enter risk\" />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Recommendations\"\r\n                placeholder=\"Enter recommendations\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      )}\r\n\r\n      <Box sx={{ mt: 3, display: \"flex\", gap: 2 }}>\r\n        <Button\r\n          variant=\"outlined\"\r\n          startIcon={<ArrowBack />}\r\n          onClick={handleBack}\r\n        >\r\n          Back\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={handleSaveAndClose}\r\n          sx={{\r\n            backgroundColor: theme.palette.primary[500],\r\n            \"&:hover\": {\r\n              backgroundColor: theme.palette.primary[600],\r\n            },\r\n          }}\r\n        >\r\n          Save and Close\r\n        </Button>\r\n      </Box>\r\n\r\n      {/* Sample Summary Table */}\r\n      <Paper sx={{ p: 3, mt: 3 }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Sample Summary\r\n        </Typography>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Sample Number</TableCell>\r\n                <TableCell>Sample Location</TableCell>\r\n                <TableCell>Material Description</TableCell>\r\n                <TableCell>Asbestos Content</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {samples.map((sample, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>{sample.sampleNumber}</TableCell>\r\n                  <TableCell>{sample.sampleLocation}</TableCell>\r\n                  <TableCell>{sample.materialDescription}</TableCell>\r\n                  <TableCell>{sample.asbestosContent}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AssessmentSamples;\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"3.2\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 2 7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5\"\n}, \"1\")], 'PhotoCamera');"],"names":["AssessmentSamples","theme","useTheme","navigate","useNavigate","sampleNumber","setSampleNumber","useState","sampleLocation","setSampleLocation","materialDescription","setMaterialDescription","asbestosContent","setAsbestosContent","samples","setSamples","useEffect","storedSamples","localStorage","getItem","JSON","parse","_jsxs","Box","sx","p","xs","sm","md","children","_jsx","Typography","variant","mb","Paper","gutterBottom","Grid","container","spacing","item","TextField","fullWidth","label","value","onChange","e","target","FormControl","InputLabel","Select","event","MenuItem","mt","display","gap","Button","startIcon","PhotoCamera","onClick","navigator","mediaDevices","getUserMedia","video","then","stream","input","document","createElement","type","accept","capture","onchange","file","files","console","log","click","catch","err","alert","placeholder","ArrowBack","handleBack","handleSaveAndClose","newSample","setItem","stringify","backgroundColor","palette","primary","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","map","sample","index","createSvgIcon","cx","cy","r","d"],"sourceRoot":""}