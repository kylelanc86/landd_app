{"version":3,"file":"static/js/70.34d8ad2d.chunk.js","mappings":"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","sources":["services/reportTemplateService.js","../node_modules/@mui/icons-material/esm/Save.js","../node_modules/@mui/icons-material/esm/Preview.js","scenes/admin/ReportTemplates.jsx","../node_modules/@mui/icons-material/esm/Download.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const reportTemplateService = {\r\n  // Get all report templates\r\n  getAllTemplates: async () => {\r\n    try {\r\n      const response = await api.get('/report-templates');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching report templates:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get a specific template by type\r\n  getTemplateByType: async (templateType) => {\r\n    try {\r\n      const response = await api.get(`/report-templates/${templateType}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching report template:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Create a new template\r\n  createTemplate: async (templateData) => {\r\n    try {\r\n      const response = await api.post('/report-templates', templateData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error creating report template:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Update an existing template\r\n  updateTemplate: async (templateType, updateData) => {\r\n    try {\r\n      const response = await api.put(`/report-templates/${templateType}`, updateData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error updating report template:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Delete a template\r\n  deleteTemplate: async (templateType) => {\r\n    try {\r\n      const response = await api.delete(`/report-templates/${templateType}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error deleting report template:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Initialize default templates if they don't exist\r\n  initializeDefaultTemplates: async () => {\r\n    const defaultTemplates = {\r\n      asbestosClearance: {\r\n        templateType: \"asbestosClearance\",\r\n        companyDetails: {\r\n          name: \"Lancaster & Dickenson Consulting Pty Ltd\",\r\n          address: \"4/6 Dacre Street, Mitchell ACT 2911\",\r\n          email: \"enquiries@landd.com.au\",\r\n          phone: \"(02) 6241 2779\",\r\n          website: \"www.landd.com.au\",\r\n          abn: \"74 169 785 915\"\r\n        },\r\n        reportHeaders: {\r\n          title: \"ASBESTOS REMOVAL CLEARANCE CERTIFICATE\",\r\n          subtitle: \"Clearance Inspection Report\"\r\n        },\r\n        standardSections: {\r\n          // Front Cover Content\r\n          frontCoverTitle: \"ASBESTOS REMOVAL CLEARANCE CERTIFICATE\",\r\n          frontCoverSubtitle: \"Clearance Inspection Report\",\r\n          \r\n          // Version Control Page Content\r\n          versionControlTitle: \"ASBESTOS REMOVAL CLEARANCE CERTIFICATE\",\r\n          preparedForLabel: \"PREPARED FOR:\",\r\n          preparedByLabel: \"PREPARED BY:\",\r\n          documentDetailsLabel: \"DOCUMENT DETAILS\",\r\n          revisionHistoryLabel: \"REVISION HISTORY\",\r\n          \r\n          // Inspection Details Content\r\n          inspectionDetailsTitle: \"Inspection Details\",\r\n          inspectionIntroduction: \"Following discussions with {CLIENT_NAME}, Lancaster and Dickenson Consulting (L & D) were contracted to undertake a visual clearance inspection following the removal of {ASBESTOS_TYPE} asbestos from {SITE_NAME} (herein referred to as 'the Site').\",\r\n          inspectionSpecifics: \"Asbestos removal works were undertaken by {ASBESTOS_REMOVALIST}. {LAA_NAME} (ACT Licensed Asbestos Assessor - {LAA_LICENSE}) from L&D visited the Site at {INSPECTION_TIME} on {INSPECTION_DATE}.\",\r\n          tableIntroduction: \"Table 1 below outlines the ACM that formed part of the inspection. Photographs of the Asbestos Removal Area and a Site Plan are presented in Appendix A and Appendix B respectively.\",\r\n          removalTableTitle: \"Table 1: Asbestos Removal Areas\",\r\n          inspectionExclusions: \"This clearance certificate is specific to the scope of removal works detailed above. ACM may be present beyond the inspected area. Asbestos fibre cement packers remain under the windowsill. The packers were sprayed with black spray. The packers should be removed prior to commencing works that may disturb or damage the material.\",\r\n          \r\n          // Clearance Certification Content\r\n          clearanceCertificationTitle: \"Clearance Certification\",\r\n          clearanceCertificationText: \"An inspection of the asbestos removal area and the surrounding areas (including access and egress pathways) was undertaken on {INSPECTION_DATE}. The LAA found no visible asbestos residue from asbestos removal work in the asbestos removal area, or in the vicinity of the area, where the asbestos removal works were carried out.\",\r\n          riskAssessmentText: \"The LAA considers that the asbestos removal area does not pose a risk to health and safety from exposure to asbestos and may be re-occupied.\",\r\n          contactText: \"Please do not hesitate to contact the undersigned should you have any queries regarding this report.\",\r\n          behalfText: \"For and on behalf of Lancaster and Dickenson Consulting.\",\r\n          signatureTitle: \"ACT Licensed Asbestos Assessor - {LAA_LICENSE}\",\r\n          \r\n          // Background Information Content\r\n          backgroundTitle: \"Background Information Regarding Non-friable Clearance Inspections\",\r\n          backgroundIntroduction: \"Following completion of non-friable asbestos removal works undertaken by a suitably licenced Asbestos Removal Contractor, a clearance inspection must be completed by an independent LAA / a competent person. The clearance inspection includes an assessment of the following:\",\r\n          bulletPoint1: \"Visual inspection of the work area for asbestos dust or debris\",\r\n          bulletPoint2: \"Visual inspection of the adjacent area including the access and egress pathways for visible asbestos dust and debris\",\r\n          requirementsText: \"It is required that a Non-Friable Clearance Certificate be issued on completion of a successful inspection. The issuer needs to ensure:\",\r\n          bulletPoint3: \"This certificate should be issued prior to the area being re-occupied. This chain of events should occur regardless of whether the site is a commercial or residential property.\",\r\n          bulletPoint4: \"The asbestos removal area and areas immediately surrounding it are visibly clean from asbestos contamination\",\r\n          bulletPoint5: \"The removal area does not pose a risk to health safety and safety from exposure to asbestos\",\r\n          \r\n          // Legislative Requirements Content\r\n          legislativeTitle: \"Legislative Requirements\",\r\n          legislativeIntroduction: \"Non-Friable Clearance Certificates should be written in general accordance with and with reference to:\",\r\n          legislativePoint1: \"ACT Work Health and Safety (WHS) Act 2011\",\r\n          legislativePoint2: \"ACT Work Health and Safety Regulation 2011\",\r\n          legislativePoint3: \"ACT Work Health and Safety (How to Safely Remove Asbestos Code of Practice) 2022\",\r\n          \r\n          // Limitations Content\r\n          limitationsTitle: \"Non-Friable Clearance Certificate Limitations\",\r\n          limitationsText: \"The visual clearance inspection was only carried out in the locations outlined within this document. L&D did not inspect any areas of the property that fall outside of the locations listed in this certificate and therefore make no comment regarding the presence or condition of other ACM that may or may not be present. When undertaking the inspection, the LAA tries to inspect as much of the asbestos removal area as possible. However, no inspection is absolute. Should suspect ACM be identified following the inspection, works should cease until an assessment of the materials is completed.\",\r\n          \r\n          // Footer Content\r\n          footerText: \"{REPORT_TYPE} Clearance Certificate: {SITE_NAME}\"\r\n        }\r\n      },\r\n      leadAssessment: {\r\n        templateType: \"leadAssessment\",\r\n        companyDetails: {\r\n          name: \"Lancaster & Dickenson Consulting Pty Ltd\",\r\n          address: \"4/6 Dacre Street, Mitchell ACT 2911\",\r\n          email: \"enquiries@landd.com.au\",\r\n          phone: \"(02) 6241 2779\",\r\n          website: \"www.landd.com.au\",\r\n          abn: \"74 169 785 915\"\r\n        },\r\n        reportHeaders: {\r\n          title: \"LEAD ASSESSMENT REPORT\",\r\n          subtitle: \"Lead Hazard Assessment\"\r\n        },\r\n        standardSections: {\r\n          introduction: \"This report presents the results of the lead assessment conducted in accordance with relevant occupational health and safety requirements.\",\r\n          methodology: \"The assessment was conducted using appropriate sampling and analysis techniques as required by relevant standards and guidelines.\",\r\n          conclusion: \"Based on the assessment results, recommendations are provided for the management of lead hazards.\",\r\n          disclaimer: \"This report is prepared for the specific purpose stated and should not be used for any other purpose without the written consent of Lancaster & Dickenson Consulting Pty Ltd.\"\r\n        }\r\n      },\r\n      mouldAssessment: {\r\n        templateType: \"mouldAssessment\",\r\n        companyDetails: {\r\n          name: \"Lancaster & Dickenson Consulting Pty Ltd\",\r\n          address: \"4/6 Dacre Street, Mitchell ACT 2911\",\r\n          email: \"enquiries@landd.com.au\",\r\n          phone: \"(02) 6241 2779\",\r\n          website: \"www.landd.com.au\",\r\n          abn: \"74 169 785 915\"\r\n        },\r\n        reportHeaders: {\r\n          title: \"MOULD ASSESSMENT REPORT\",\r\n          subtitle: \"Mould Contamination Assessment\"\r\n        },\r\n        standardSections: {\r\n          introduction: \"This report presents the results of the mould assessment conducted to evaluate indoor air quality and mould contamination.\",\r\n          methodology: \"The assessment was conducted using visual inspection and air sampling techniques in accordance with relevant guidelines.\",\r\n          conclusion: \"Based on the assessment results, recommendations are provided for mould remediation and prevention.\",\r\n          disclaimer: \"This report is prepared for the specific purpose stated and should not be used for any other purpose without the written consent of Lancaster & Dickenson Consulting Pty Ltd.\"\r\n        }\r\n      }\r\n    };\r\n\r\n    try {\r\n      // Check if templates exist and create them if they don't\r\n      for (const [key, template] of Object.entries(defaultTemplates)) {\r\n        try {\r\n          await api.get(`/report-templates/${template.templateType}`);\r\n        } catch (error) {\r\n          if (error.response?.status === 404) {\r\n            // Template doesn't exist, create it\r\n            await api.post('/report-templates', template);\r\n            console.log(`Created default template for ${key}`);\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error initializing default templates:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default reportTemplateService; ","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3m3-10H5V5h10z\"\n}), 'Save');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.89-2-2-2m0 16H5V7h14zm-5.5-6c0 .83-.67 1.5-1.5 1.5s-1.5-.67-1.5-1.5.67-1.5 1.5-1.5 1.5.67 1.5 1.5M12 9c-2.73 0-5.06 1.66-6 4 .94 2.34 3.27 4 6 4s5.06-1.66 6-4c-.94-2.34-3.27-4-6-4m0 6.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5\"\n}), 'Preview');","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  Paper,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Chip,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Alert,\r\n  Divider,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport {\r\n  Edit as EditIcon,\r\n  Save as SaveIcon,\r\n  Cancel as CancelIcon,\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n  Preview as PreviewIcon,\r\n  Download as DownloadIcon,\r\n} from \"@mui/icons-material\";\r\nimport { tokens } from \"../../theme\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport PermissionGate from \"../../components/PermissionGate\";\r\nimport reportTemplateService from \"../../services/reportTemplateService\";\r\nimport { generateTemplatePDF } from \"../../utils/templatePDFGenerator\";\r\n\r\nconst ReportTemplates = () => {\r\n  const theme = useTheme();\r\n  const colors = tokens;\r\n  const { user } = useAuth();\r\n\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [templates, setTemplates] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [editingSection, setEditingSection] = useState(null);\r\n  const [editData, setEditData] = useState({});\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [saveStatus, setSaveStatus] = useState({\r\n    show: false,\r\n    message: \"\",\r\n    severity: \"success\",\r\n  });\r\n  const [detailedEditMode, setDetailedEditMode] = useState(false);\r\n  const [previewData, setPreviewData] = useState({});\r\n  const [showPreview, setShowPreview] = useState(false);\r\n  const [generatingPDF, setGeneratingPDF] = useState(false);\r\n\r\n  const reportTypes = [\r\n    {\r\n      id: \"asbestosClearance\",\r\n      name: \"Asbestos Clearance Report\",\r\n      color: \"#FF6B6B\",\r\n    },\r\n    { id: \"leadAssessment\", name: \"Lead Assessment Report\", color: \"#4ECDC4\" },\r\n    {\r\n      id: \"mouldAssessment\",\r\n      name: \"Mould Assessment Report\",\r\n      color: \"#45B7D1\",\r\n    },\r\n  ];\r\n\r\n  // Sample data for preview\r\n  const sampleData = {\r\n    CLIENT_NAME: \"Sample Client Pty Ltd\",\r\n    ASBESTOS_TYPE: \"non-friable\",\r\n    SITE_NAME: \"123 Sample Street, Canberra ACT\",\r\n    ASBESTOS_REMOVALIST: \"Professional Asbestos Removal\",\r\n    LAA_NAME: \"Patrick Cerone\",\r\n    LAA_LICENSE: \"AA00031\",\r\n    INSPECTION_TIME: \"09:00 AM\",\r\n    INSPECTION_DATE: \"25 July 2024\",\r\n    REPORT_TYPE: \"Non-friable\",\r\n    PROJECT_NAME: \"Sample Asbestos Removal Project\",\r\n    PROJECT_NUMBER: \"PRJ-2024-001\",\r\n    SITE_ADDRESS: \"123 Sample Street, Canberra ACT 2600\",\r\n    REMOVAL_CONTRACTOR: \"Professional Asbestos Removal Pty Ltd\",\r\n    REMOVAL_LICENSE: \"AR000123\",\r\n    INSPECTOR_NAME: \"John Smith\",\r\n    INSPECTOR_LICENSE: \"AI000456\",\r\n    INSPECTION_DATETIME: \"25 July 2024 at 09:00 AM\",\r\n    CLEARANCE_DATE: \"25 July 2024\",\r\n    CLEARANCE_TIME: \"09:00 AM\",\r\n  };\r\n\r\n  // Template sections organized by page for detailed editing\r\n  const templateSections = {\r\n    \"Front Cover\": [\"frontCoverTitle\", \"frontCoverSubtitle\"],\r\n    \"Version Control\": [\r\n      \"versionControlTitle\",\r\n      \"preparedForLabel\",\r\n      \"preparedByLabel\",\r\n      \"documentDetailsLabel\",\r\n      \"revisionHistoryLabel\",\r\n    ],\r\n    \"Inspection Details\": [\r\n      \"inspectionDetailsTitle\",\r\n      \"inspectionIntroduction\",\r\n      \"inspectionSpecifics\",\r\n      \"tableIntroduction\",\r\n      \"removalTableTitle\",\r\n      \"inspectionExclusions\",\r\n    ],\r\n    \"Clearance Certification\": [\r\n      \"clearanceCertificationTitle\",\r\n      \"clearanceCertificationText\",\r\n      \"riskAssessmentText\",\r\n      \"contactText\",\r\n      \"behalfText\",\r\n      \"signatureTitle\",\r\n    ],\r\n    \"Background Information\": [\r\n      \"backgroundTitle\",\r\n      \"backgroundIntroduction\",\r\n      \"bulletPoint1\",\r\n      \"bulletPoint2\",\r\n      \"requirementsText\",\r\n      \"bulletPoint3\",\r\n      \"bulletPoint4\",\r\n      \"bulletPoint5\",\r\n    ],\r\n    \"Legislative Requirements\": [\r\n      \"legislativeTitle\",\r\n      \"legislativeIntroduction\",\r\n      \"legislativePoint1\",\r\n      \"legislativePoint2\",\r\n      \"legislativePoint3\",\r\n    ],\r\n    Limitations: [\"limitationsTitle\", \"limitationsText\"],\r\n    Footer: [\"footerText\"],\r\n  };\r\n\r\n  // Load templates on component mount\r\n  useEffect(() => {\r\n    const loadTemplates = async () => {\r\n      try {\r\n        setLoading(true);\r\n        // Initialize default templates if they don't exist\r\n        await reportTemplateService.initializeDefaultTemplates();\r\n\r\n        // Load all templates\r\n        const allTemplates = await reportTemplateService.getAllTemplates();\r\n\r\n        // Convert array to object with templateType as key\r\n        const templatesObj = {};\r\n        allTemplates.forEach((template) => {\r\n          templatesObj[template.templateType] = template;\r\n        });\r\n\r\n        setTemplates(templatesObj);\r\n\r\n        // Set initial preview data\r\n        setPreviewData(sampleData);\r\n      } catch (error) {\r\n        console.error(\"Error loading templates:\", error);\r\n        setSaveStatus({\r\n          show: true,\r\n          message: \"Error loading templates. Please refresh the page.\",\r\n          severity: \"error\",\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadTemplates();\r\n  }, []);\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setActiveTab(newValue);\r\n  };\r\n\r\n  const handleEdit = (section, data) => {\r\n    setEditingSection(section);\r\n    setEditData(data);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const currentTemplate = reportTypes[activeTab].id;\r\n\r\n      // Update template via API\r\n      await reportTemplateService.updateTemplate(currentTemplate, {\r\n        [editingSection]: editData,\r\n      });\r\n\r\n      // Update local state\r\n      setTemplates((prev) => ({\r\n        ...prev,\r\n        [currentTemplate]: {\r\n          ...prev[currentTemplate],\r\n          [editingSection]: editData,\r\n        },\r\n      }));\r\n\r\n      setSaveStatus({\r\n        show: true,\r\n        message: `${editingSection} updated successfully!`,\r\n        severity: \"success\",\r\n      });\r\n\r\n      setOpenDialog(false);\r\n      setEditingSection(null);\r\n      setEditData({});\r\n\r\n      // Hide success message after 3 seconds\r\n      setTimeout(() => {\r\n        setSaveStatus({ show: false, message: \"\", severity: \"success\" });\r\n      }, 3000);\r\n    } catch (error) {\r\n      console.error(\"Error saving template:\", error);\r\n      setSaveStatus({\r\n        show: true,\r\n        message: \"Error saving changes. Please try again.\",\r\n        severity: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setOpenDialog(false);\r\n    setEditingSection(null);\r\n    setEditData({});\r\n  };\r\n\r\n  const handlePreviewToggle = () => {\r\n    setShowPreview(!showPreview);\r\n  };\r\n\r\n  const replacePlaceholders = (text) => {\r\n    if (!text) return \"\";\r\n    let result = text;\r\n    Object.entries(previewData).forEach(([key, value]) => {\r\n      result = result.replace(new RegExp(`{${key}}`, \"g\"), value);\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const handleDetailedEdit = (field, data) => {\r\n    setEditingSection(field);\r\n    setEditData(data);\r\n  };\r\n\r\n  const handleDetailedSave = async () => {\r\n    try {\r\n      // Update template via API\r\n      await reportTemplateService.updateTemplate(\"asbestosClearance\", {\r\n        standardSections: {\r\n          [editingSection]: editData,\r\n        },\r\n      });\r\n\r\n      // Update local state\r\n      setTemplates((prev) => ({\r\n        ...prev,\r\n        asbestosClearance: {\r\n          ...prev.asbestosClearance,\r\n          standardSections: {\r\n            ...prev.asbestosClearance?.standardSections,\r\n            [editingSection]: editData,\r\n          },\r\n        },\r\n      }));\r\n\r\n      setSaveStatus({\r\n        show: true,\r\n        message: `${editingSection} updated successfully!`,\r\n        severity: \"success\",\r\n      });\r\n\r\n      setEditingSection(null);\r\n      setEditData({});\r\n\r\n      // Hide success message after 3 seconds\r\n      setTimeout(() => {\r\n        setSaveStatus({ show: false, message: \"\", severity: \"success\" });\r\n      }, 3000);\r\n    } catch (error) {\r\n      console.error(\"Error saving template:\", error);\r\n      setSaveStatus({\r\n        show: true,\r\n        message: \"Error saving changes. Please try again.\",\r\n        severity: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const generatePDFPreview = async () => {\r\n    const template = templates.asbestosClearance;\r\n    if (!template) return;\r\n\r\n    setGeneratingPDF(true);\r\n    try {\r\n      // Use the utility function to generate PDF\r\n      const fileName = await generateTemplatePDF(\r\n        template,\r\n        previewData,\r\n        replacePlaceholders\r\n      );\r\n\r\n      setSaveStatus({\r\n        show: true,\r\n        message: \"PDF preview generated successfully!\",\r\n        severity: \"success\",\r\n      });\r\n\r\n      // Hide success message after 3 seconds\r\n      setTimeout(() => {\r\n        setSaveStatus({ show: false, message: \"\", severity: \"success\" });\r\n      }, 3000);\r\n    } catch (error) {\r\n      console.error(\"Error generating PDF:\", error);\r\n      setSaveStatus({\r\n        show: true,\r\n        message: \"Error generating PDF. Please try again.\",\r\n        severity: \"error\",\r\n      });\r\n    } finally {\r\n      setGeneratingPDF(false);\r\n    }\r\n  };\r\n\r\n  const renderSectionEditor = () => {\r\n    if (!editingSection || !editData) return null;\r\n\r\n    const currentTemplate = templates[reportTypes[activeTab].id];\r\n    const sectionData = currentTemplate[editingSection];\r\n\r\n    if (editingSection === \"companyDetails\") {\r\n      return (\r\n        <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\r\n          {Object.keys(sectionData).map((key) => (\r\n            <TextField\r\n              key={key}\r\n              label={\r\n                key.charAt(0).toUpperCase() +\r\n                key.slice(1).replace(/([A-Z])/g, \" $1\")\r\n              }\r\n              value={editData[key] || \"\"}\r\n              onChange={(e) =>\r\n                setEditData((prev) => ({ ...prev, [key]: e.target.value }))\r\n              }\r\n              fullWidth\r\n              variant=\"outlined\"\r\n            />\r\n          ))}\r\n        </Box>\r\n      );\r\n    }\r\n\r\n    if (editingSection === \"standardSections\") {\r\n      return (\r\n        <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\r\n          {Object.keys(sectionData).map((key) => (\r\n            <TextField\r\n              key={key}\r\n              label={\r\n                key.charAt(0).toUpperCase() +\r\n                key.slice(1).replace(/([A-Z])/g, \" $1\")\r\n              }\r\n              value={editData[key] || \"\"}\r\n              onChange={(e) =>\r\n                setEditData((prev) => ({ ...prev, [key]: e.target.value }))\r\n              }\r\n              fullWidth\r\n              multiline\r\n              rows={4}\r\n              variant=\"outlined\"\r\n            />\r\n          ))}\r\n        </Box>\r\n      );\r\n    }\r\n\r\n    if (editingSection === \"reportHeaders\") {\r\n      return (\r\n        <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\r\n          {Object.keys(sectionData).map((key) => (\r\n            <TextField\r\n              key={key}\r\n              label={\r\n                key.charAt(0).toUpperCase() +\r\n                key.slice(1).replace(/([A-Z])/g, \" $1\")\r\n              }\r\n              value={editData[key] || \"\"}\r\n              onChange={(e) =>\r\n                setEditData((prev) => ({ ...prev, [key]: e.target.value }))\r\n              }\r\n              fullWidth\r\n              variant=\"outlined\"\r\n            />\r\n          ))}\r\n        </Box>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const renderDetailedTemplateSection = (sectionName, fields) => {\r\n    const template = templates.asbestosClearance;\r\n    if (!template) return null;\r\n\r\n    return (\r\n      <Grid item xs={12} key={sectionName}>\r\n        <Card>\r\n          <CardContent>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                mb: 2,\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\" color=\"black\">\r\n                {sectionName}\r\n              </Typography>\r\n            </Box>\r\n            <Grid container spacing={2}>\r\n              {fields.map((field) => (\r\n                <Grid item xs={12} md={6} key={field}>\r\n                  <Box\r\n                    sx={{\r\n                      p: 2,\r\n                      border: `1px solid ${colors.grey[700]}`,\r\n                      borderRadius: 1,\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Box\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        alignItems: \"center\",\r\n                        mb: 1,\r\n                      }}\r\n                    >\r\n                      <Typography variant=\"subtitle2\" color=\"black\">\r\n                        {field.charAt(0).toUpperCase() +\r\n                          field.slice(1).replace(/([A-Z])/g, \" $1\")}\r\n                      </Typography>\r\n                      <IconButton\r\n                        onClick={() =>\r\n                          handleDetailedEdit(\r\n                            field,\r\n                            template.standardSections[field] || \"\"\r\n                          )\r\n                        }\r\n                        size=\"small\"\r\n                      >\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                    </Box>\r\n                    <Typography variant=\"body2\" color=\"black\">\r\n                      {replacePlaceholders(\r\n                        template.standardSections[field] || \"\"\r\n                      )}\r\n                    </Typography>\r\n                  </Box>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const renderDetailedEditor = () => {\r\n    if (!editingSection || !editData) return null;\r\n\r\n    return (\r\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\r\n        <TextField\r\n          label={\r\n            editingSection.charAt(0).toUpperCase() +\r\n            editingSection.slice(1).replace(/([A-Z])/g, \" $1\")\r\n          }\r\n          value={editData}\r\n          onChange={(e) => setEditData(e.target.value)}\r\n          fullWidth\r\n          multiline\r\n          rows={4}\r\n          variant=\"outlined\"\r\n          helperText=\"Use {PLACEHOLDER_NAME} for dynamic content\"\r\n        />\r\n        <Box sx={{ display: \"flex\", gap: 1, justifyContent: \"flex-end\" }}>\r\n          <Button onClick={handleCancel} startIcon={<CancelIcon />}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={handleDetailedSave}\r\n            variant=\"contained\"\r\n            startIcon={<SaveIcon />}\r\n          >\r\n            Save\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const renderPreview = () => {\r\n    const template = templates.asbestosClearance;\r\n    if (!template || !showPreview) return null;\r\n\r\n    return (\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <CardContent>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                mb: 2,\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\" color=\"black\">\r\n                Live Preview\r\n              </Typography>\r\n              <Box sx={{ display: \"flex\", gap: 1 }}>\r\n                <Button\r\n                  onClick={generatePDFPreview}\r\n                  startIcon={<DownloadIcon />}\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  disabled={generatingPDF}\r\n                  sx={{\r\n                    backgroundColor: \"#2e7d32\",\r\n                    \"&:hover\": { backgroundColor: \"#1b5e20\" },\r\n                  }}\r\n                >\r\n                  {generatingPDF ? \"Generating...\" : \"Generate PDF\"}\r\n                </Button>\r\n                <Button\r\n                  onClick={handlePreviewToggle}\r\n                  startIcon={<PreviewIcon />}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                >\r\n                  Hide Preview\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n            <Paper\r\n              sx={{\r\n                p: 3,\r\n                backgroundColor: \"white\",\r\n                color: \"black\",\r\n                maxHeight: \"600px\",\r\n                overflow: \"auto\",\r\n                fontFamily: \"Arial, sans-serif\",\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" sx={{ mb: 2, color: \"#009900\" }}>\r\n                {replacePlaceholders(template.standardSections.frontCoverTitle)}\r\n              </Typography>\r\n              <Typography variant=\"h6\" sx={{ mb: 3 }}>\r\n                {replacePlaceholders(\r\n                  template.standardSections.frontCoverSubtitle\r\n                )}\r\n              </Typography>\r\n\r\n              <Divider sx={{ my: 2 }} />\r\n\r\n              <Typography variant=\"h5\" sx={{ mb: 2 }}>\r\n                {replacePlaceholders(\r\n                  template.standardSections.inspectionDetailsTitle\r\n                )}\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n                {replacePlaceholders(\r\n                  template.standardSections.inspectionIntroduction\r\n                )}\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n                {replacePlaceholders(\r\n                  template.standardSections.inspectionSpecifics\r\n                )}\r\n              </Typography>\r\n\r\n              <Divider sx={{ my: 2 }} />\r\n\r\n              <Typography variant=\"h5\" sx={{ mb: 2 }}>\r\n                {replacePlaceholders(\r\n                  template.standardSections.clearanceCertificationTitle\r\n                )}\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n                {replacePlaceholders(\r\n                  template.standardSections.clearanceCertificationText\r\n                )}\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n                {replacePlaceholders(\r\n                  template.standardSections.riskAssessmentText\r\n                )}\r\n              </Typography>\r\n            </Paper>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const renderCompanyDetails = () => {\r\n    // Use the first template's company details since they're constant\r\n    const firstTemplate = Object.values(templates)[0];\r\n    if (!firstTemplate?.companyDetails) {\r\n      return null;\r\n    }\r\n\r\n    const companyDetails = firstTemplate.companyDetails;\r\n    const entries = Object.entries(companyDetails);\r\n    const leftColumn = entries.slice(0, 3);\r\n    const rightColumn = entries.slice(3);\r\n\r\n    return (\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <CardContent>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                mb: 2,\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\" color=\"black\">\r\n                Company Details\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => handleEdit(\"companyDetails\", companyDetails)}\r\n                size=\"small\"\r\n              >\r\n                <EditIcon />\r\n              </IconButton>\r\n            </Box>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} md={6}>\r\n                <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n                  {leftColumn.map(([key, value]) => (\r\n                    <Box\r\n                      key={key}\r\n                      sx={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                    >\r\n                      <Typography variant=\"body2\" color=\"black\">\r\n                        {key.charAt(0).toUpperCase() +\r\n                          key.slice(1).replace(/([A-Z])/g, \" $1\")}\r\n                        :\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"black\">\r\n                        {value}\r\n                      </Typography>\r\n                    </Box>\r\n                  ))}\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n                  {rightColumn.map(([key, value]) => (\r\n                    <Box\r\n                      key={key}\r\n                      sx={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                    >\r\n                      <Typography variant=\"body2\" color=\"black\">\r\n                        {key.charAt(0).toUpperCase() +\r\n                          key.slice(1).replace(/([A-Z])/g, \" $1\")}\r\n                        :\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"black\">\r\n                        {value}\r\n                      </Typography>\r\n                    </Box>\r\n                  ))}\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const renderTemplateContent = (templateId) => {\r\n    const template = templates[templateId];\r\n\r\n    // Return loading state if template doesn't exist yet\r\n    if (!template) {\r\n      return (\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            minHeight: \"200px\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" color=\"black\">\r\n            Loading template...\r\n          </Typography>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Grid container spacing={3}>\r\n        {/* Report Headers */}\r\n        <Grid item xs={12} md={6}>\r\n          <Card>\r\n            <CardContent>\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  alignItems: \"center\",\r\n                  mb: 2,\r\n                }}\r\n              >\r\n                <Typography variant=\"h6\" color=\"black\">\r\n                  Report Headers\r\n                </Typography>\r\n                <IconButton\r\n                  onClick={() =>\r\n                    handleEdit(\"reportHeaders\", template.reportHeaders || {})\r\n                  }\r\n                  size=\"small\"\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n              </Box>\r\n              <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n                {template.reportHeaders &&\r\n                  Object.entries(template.reportHeaders).map(([key, value]) => (\r\n                    <Box\r\n                      key={key}\r\n                      sx={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                    >\r\n                      <Typography variant=\"body2\" color=\"black\">\r\n                        {key.charAt(0).toUpperCase() +\r\n                          key.slice(1).replace(/([A-Z])/g, \" $1\")}\r\n                        :\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"black\">\r\n                        {value}\r\n                      </Typography>\r\n                    </Box>\r\n                  ))}\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Standard Sections */}\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  alignItems: \"center\",\r\n                  mb: 2,\r\n                }}\r\n              >\r\n                <Typography variant=\"h6\" color=\"black\">\r\n                  Standard Sections\r\n                </Typography>\r\n                <IconButton\r\n                  onClick={() =>\r\n                    handleEdit(\r\n                      \"standardSections\",\r\n                      template.standardSections || {}\r\n                    )\r\n                  }\r\n                  size=\"small\"\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n              </Box>\r\n              <Grid container spacing={2}>\r\n                {template.standardSections &&\r\n                  Object.entries(template.standardSections).map(\r\n                    ([key, value]) => (\r\n                      <Grid item xs={12} md={6} key={key}>\r\n                        <Box\r\n                          sx={{\r\n                            p: 2,\r\n                            border: `1px solid ${colors.grey[700]}`,\r\n                            borderRadius: 1,\r\n                          }}\r\n                        >\r\n                          <Typography\r\n                            variant=\"subtitle2\"\r\n                            color=\"black\"\r\n                            sx={{ mb: 1 }}\r\n                          >\r\n                            {key.charAt(0).toUpperCase() +\r\n                              key.slice(1).replace(/([A-Z])/g, \" $1\")}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" color=\"black\">\r\n                            {value.length > 150\r\n                              ? `${value.substring(0, 150)}...`\r\n                              : value}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Grid>\r\n                    )\r\n                  )}\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <PermissionGate requiredPermissions={[\"admin.view\"]}>\r\n      <Box m=\"20px\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Typography\r\n            variant=\"h2\"\r\n            color=\"black\"\r\n            fontWeight=\"bold\"\r\n            sx={{ mb: \"5px\" }}\r\n          >\r\n            Report Templates\r\n          </Typography>\r\n          {activeTab === 0 && (\r\n            <Box sx={{ display: \"flex\", gap: 2 }}>\r\n              <Button\r\n                onClick={() => setDetailedEditMode(!detailedEditMode)}\r\n                variant=\"outlined\"\r\n                color={detailedEditMode ? \"primary\" : \"inherit\"}\r\n              >\r\n                {detailedEditMode ? \"Simple Mode\" : \"Detailed Mode\"}\r\n              </Button>\r\n              <Button\r\n                onClick={handlePreviewToggle}\r\n                startIcon={<PreviewIcon />}\r\n                variant=\"outlined\"\r\n              >\r\n                {showPreview ? \"Hide Preview\" : \"Show Preview\"}\r\n              </Button>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n        <Typography variant=\"h5\" color=\"black\">\r\n          Manage standardized content for different report types\r\n        </Typography>\r\n\r\n        {saveStatus.show && (\r\n          <Alert severity={saveStatus.severity} sx={{ mt: 2, mb: 2 }}>\r\n            {saveStatus.message}\r\n          </Alert>\r\n        )}\r\n\r\n        {/* Company Details - Full width at top */}\r\n        <Box sx={{ mt: 3 }}>\r\n          {loading ? (\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                minHeight: \"200px\",\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\" color=\"black\">\r\n                Loading templates...\r\n              </Typography>\r\n            </Box>\r\n          ) : (\r\n            <Grid container spacing={3}>\r\n              {renderCompanyDetails()}\r\n            </Grid>\r\n          )}\r\n        </Box>\r\n\r\n        {/* Report Template Selection Tabs */}\r\n        <Box sx={{ borderBottom: 1, borderColor: \"divider\", mt: 3 }}>\r\n          <Tabs\r\n            value={activeTab}\r\n            onChange={handleTabChange}\r\n            sx={{\r\n              \"& .MuiTab-root\": {\r\n                color: \"black\",\r\n                \"&.Mui-selected\": {\r\n                  color: \"green\",\r\n                },\r\n              },\r\n            }}\r\n          >\r\n            {reportTypes.map((type, index) => (\r\n              <Tab\r\n                key={type.id}\r\n                label={type.name}\r\n                sx={{\r\n                  \"&::before\": {\r\n                    content: '\"\"',\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    right: 0,\r\n                    height: 3,\r\n                    backgroundColor: type.color,\r\n                    borderRadius: \"3px 3px 0 0\",\r\n                  },\r\n                }}\r\n              />\r\n            ))}\r\n          </Tabs>\r\n        </Box>\r\n\r\n        {/* Template Content */}\r\n        <Box sx={{ mt: 3 }}>\r\n          {loading ? (\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                minHeight: \"200px\",\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\" color=\"black\">\r\n                Loading templates...\r\n              </Typography>\r\n            </Box>\r\n          ) : activeTab === 0 && detailedEditMode ? (\r\n            <Grid container spacing={3}>\r\n              {/* Preview Section */}\r\n              {showPreview && renderPreview()}\r\n\r\n              {/* Detailed Template Sections */}\r\n              {Object.entries(templateSections).map(([sectionName, fields]) =>\r\n                renderDetailedTemplateSection(sectionName, fields)\r\n              )}\r\n            </Grid>\r\n          ) : (\r\n            renderTemplateContent(reportTypes[activeTab].id)\r\n          )}\r\n        </Box>\r\n\r\n        {/* Edit Dialog */}\r\n        <Dialog\r\n          open={openDialog}\r\n          onClose={handleCancel}\r\n          maxWidth=\"md\"\r\n          fullWidth\r\n        >\r\n          <DialogTitle>\r\n            Edit{\" \"}\r\n            {editingSection?.charAt(0).toUpperCase() +\r\n              editingSection?.slice(1).replace(/([A-Z])/g, \" $1\")}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <Box sx={{ mt: 2 }}>{renderSectionEditor()}</Box>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleCancel} startIcon={<CancelIcon />}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={handleSave}\r\n              variant=\"contained\"\r\n              startIcon={<SaveIcon />}\r\n            >\r\n              Save Changes\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* Detailed Edit Dialog */}\r\n        {editingSection && detailedEditMode && (\r\n          <Box\r\n            sx={{\r\n              position: \"fixed\",\r\n              top: 0,\r\n              left: 0,\r\n              right: 0,\r\n              bottom: 0,\r\n              backgroundColor: \"rgba(0,0,0,0.8)\",\r\n              zIndex: 1300,\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              p: 2,\r\n            }}\r\n          >\r\n            <Paper\r\n              sx={{\r\n                p: 3,\r\n                maxWidth: \"800px\",\r\n                width: \"100%\",\r\n                maxHeight: \"80vh\",\r\n                overflow: \"auto\",\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n                Edit{\" \"}\r\n                {editingSection.charAt(0).toUpperCase() +\r\n                  editingSection.slice(1).replace(/([A-Z])/g, \" $1\")}\r\n              </Typography>\r\n              {renderDetailedEditor()}\r\n            </Paper>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </PermissionGate>\r\n  );\r\n};\r\n\r\nexport default ReportTemplates;\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 20h14v-2H5zM19 9h-4V3H9v6H5l7 7z\"\n}), 'Download');"],"names":["getAllTemplates","async","api","get","data","error","console","getTemplateByType","concat","templateType","createTemplate","post","templateData","updateTemplate","updateData","put","deleteTemplate","delete","initializeDefaultTemplates","defaultTemplates","asbestosClearance","companyDetails","name","address","email","phone","website","abn","reportHeaders","title","subtitle","standardSections","frontCoverTitle","frontCoverSubtitle","versionControlTitle","preparedForLabel","preparedByLabel","documentDetailsLabel","revisionHistoryLabel","inspectionDetailsTitle","inspectionIntroduction","inspectionSpecifics","tableIntroduction","removalTableTitle","inspectionExclusions","clearanceCertificationTitle","clearanceCertificationText","riskAssessmentText","contactText","behalfText","signatureTitle","backgroundTitle","backgroundIntroduction","bulletPoint1","bulletPoint2","requirementsText","bulletPoint3","bulletPoint4","bulletPoint5","legislativeTitle","legislativeIntroduction","legislativePoint1","legislativePoint2","legislativePoint3","limitationsTitle","limitationsText","footerText","leadAssessment","introduction","methodology","conclusion","disclaimer","mouldAssessment","key","template","Object","entries","_error$response","response","status","log","createSvgIcon","_jsx","d","ReportTemplates","useTheme","colors","tokens","user","useAuth","activeTab","setActiveTab","useState","templates","setTemplates","loading","setLoading","editingSection","setEditingSection","editData","setEditData","openDialog","setOpenDialog","saveStatus","setSaveStatus","show","message","severity","detailedEditMode","setDetailedEditMode","previewData","setPreviewData","showPreview","setShowPreview","generatingPDF","setGeneratingPDF","reportTypes","id","color","sampleData","CLIENT_NAME","ASBESTOS_TYPE","SITE_NAME","ASBESTOS_REMOVALIST","LAA_NAME","LAA_LICENSE","INSPECTION_TIME","INSPECTION_DATE","REPORT_TYPE","PROJECT_NAME","PROJECT_NUMBER","SITE_ADDRESS","REMOVAL_CONTRACTOR","REMOVAL_LICENSE","INSPECTOR_NAME","INSPECTOR_LICENSE","INSPECTION_DATETIME","CLEARANCE_DATE","CLEARANCE_TIME","useEffect","reportTemplateService","allTemplates","templatesObj","forEach","loadTemplates","handleEdit","section","handleCancel","handlePreviewToggle","replacePlaceholders","text","result","_ref","value","replace","RegExp","handleDetailedSave","prev","_prev$asbestosClearan","_objectSpread","setTimeout","generatePDFPreview","generateTemplatePDF","renderDetailedTemplateSection","sectionName","fields","Grid","item","xs","children","Card","_jsxs","CardContent","Box","sx","display","justifyContent","alignItems","mb","Typography","variant","container","spacing","map","field","md","p","border","grey","borderRadius","position","charAt","toUpperCase","slice","IconButton","onClick","handleDetailedEdit","size","EditIcon","PermissionGate","requiredPermissions","m","fontWeight","gap","Button","startIcon","PreviewIcon","Alert","mt","minHeight","renderCompanyDetails","firstTemplate","values","leftColumn","rightColumn","flexDirection","_ref2","_ref3","borderBottom","borderColor","Tabs","onChange","handleTabChange","event","newValue","type","index","Tab","label","content","top","left","right","height","backgroundColor","renderPreview","DownloadIcon","disabled","Paper","maxHeight","overflow","fontFamily","Divider","my","Limitations","Footer","_ref6","templateId","_ref4","_ref5","length","substring","renderTemplateContent","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","renderSectionEditor","sectionData","keys","TextField","e","target","multiline","rows","DialogActions","CancelIcon","currentTemplate","SaveIcon","bottom","zIndex","width","helperText"],"sourceRoot":""}