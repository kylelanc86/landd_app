{"version":3,"file":"static/js/670.2a2eb45e.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/CardActionArea/cardActionAreaClasses.js","../node_modules/@mui/material/CardActionArea/CardActionArea.js","../node_modules/@mui/icons-material/esm/Science.js","scenes/clearances/index.jsx","../node_modules/@mui/icons-material/esm/Assessment.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardActionAreaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActionArea', slot);\n}\nconst cardActionAreaClasses = generateUtilityClasses('MuiCardActionArea', ['root', 'focusVisible', 'focusHighlight']);\nexport default cardActionAreaClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"focusVisibleClassName\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport cardActionAreaClasses, { getCardActionAreaUtilityClass } from './cardActionAreaClasses';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    focusHighlight: ['focusHighlight']\n  };\n  return composeClasses(slots, getCardActionAreaUtilityClass, classes);\n};\nconst CardActionAreaRoot = styled(ButtonBase, {\n  name: 'MuiCardActionArea',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  display: 'block',\n  textAlign: 'inherit',\n  borderRadius: 'inherit',\n  // for Safari to work https://github.com/mui/material-ui/issues/36285.\n  width: '100%',\n  [`&:hover .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.hoverOpacity,\n    '@media (hover: none)': {\n      opacity: 0\n    }\n  },\n  [`&.${cardActionAreaClasses.focusVisible} .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.focusOpacity\n  }\n}));\nconst CardActionAreaFocusHighlight = styled('span', {\n  name: 'MuiCardActionArea',\n  slot: 'FocusHighlight',\n  overridesResolver: (props, styles) => styles.focusHighlight\n})(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit',\n  opacity: 0,\n  backgroundColor: 'currentcolor',\n  transition: theme.transitions.create('opacity', {\n    duration: theme.transitions.duration.short\n  })\n}));\nconst CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardActionArea'\n  });\n  const {\n      children,\n      className,\n      focusVisibleClassName\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(CardActionAreaRoot, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [children, /*#__PURE__*/_jsx(CardActionAreaFocusHighlight, {\n      className: classes.focusHighlight,\n      ownerState: ownerState\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActionArea;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.8 18.4 14 10.67V6.5l1.35-1.69c.26-.33.03-.81-.39-.81H9.04c-.42 0-.65.48-.39.81L10 6.5v4.17L4.2 18.4c-.49.66-.02 1.6.8 1.6h14c.82 0 1.29-.94.8-1.6\"\n}), 'Science');","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardActionArea,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport {\r\n  Assessment as AssessmentIcon,\r\n  Science as ScienceIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n} from \"@mui/icons-material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { tokens } from \"../../theme\";\r\nimport PermissionGate from \"../../components/PermissionGate\";\r\n\r\nconst ClearancesDashboard = () => {\r\n  const theme = useTheme();\r\n  const colors = tokens;\r\n  const navigate = useNavigate();\r\n\r\n  const clearanceModules = [\r\n    {\r\n      id: \"asbestos-clearance\",\r\n      title: \"Asbestos Clearance\",\r\n      description: \"Conduct asbestos clearance inspections and reports\",\r\n      icon: (\r\n        <AssessmentIcon sx={{ fontSize: 40, color: colors.secondary[500] }} />\r\n      ),\r\n      path: \"/clearances/asbestos\",\r\n      requiredPermission: \"asbestos.view\",\r\n    },\r\n    {\r\n      id: \"lead-clearance\",\r\n      title: \"Lead Clearance\",\r\n      description: \"Conduct lead clearance inspections and reports\",\r\n      icon: (\r\n        <CheckCircleIcon sx={{ fontSize: 40, color: colors.secondary[500] }} />\r\n      ),\r\n      path: \"/clearances/lead\",\r\n      requiredPermission: \"asbestos.view\",\r\n    },\r\n    {\r\n      id: \"mould-validation\",\r\n      title: \"Mould Validation\",\r\n      description: \"Conduct mould validation inspections and reports\",\r\n      icon: <ScienceIcon sx={{ fontSize: 40, color: colors.secondary[500] }} />,\r\n      path: \"/clearances/mould\",\r\n      requiredPermission: \"asbestos.view\",\r\n    },\r\n  ];\r\n\r\n  const handleModuleClick = (module) => {\r\n    navigate(module.path);\r\n  };\r\n\r\n  return (\r\n    <PermissionGate requiredPermissions={[\"asbestos.view\"]}>\r\n      <Box m=\"20px\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Typography\r\n            variant=\"h2\"\r\n            color={colors.grey[100]}\r\n            fontWeight=\"bold\"\r\n            sx={{ mb: \"5px\" }}\r\n          >\r\n            Clearances Dashboard\r\n          </Typography>\r\n        </Box>\r\n        <Typography variant=\"h5\" color={colors.secondary[500]}>\r\n          Manage and conduct various types of clearance inspections\r\n        </Typography>\r\n\r\n        <Box sx={{ mt: 4 }}>\r\n          <Grid container spacing={3}>\r\n            {clearanceModules.map((module) => (\r\n              <Grid item xs={12} md={6} lg={4} key={module.id}>\r\n                <Card\r\n                  sx={{\r\n                    height: \"100%\",\r\n                    transition:\r\n                      \"transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out\",\r\n                    \"&:hover\": {\r\n                      transform: \"translateY(-4px)\",\r\n                      boxShadow: \"0px 8px 25px rgba(0, 0, 0, 0.15)\",\r\n                    },\r\n                  }}\r\n                >\r\n                  <CardActionArea\r\n                    onClick={() => handleModuleClick(module)}\r\n                    sx={{ height: \"100%\", p: 3 }}\r\n                  >\r\n                    <CardContent\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        textAlign: \"center\",\r\n                        p: 0,\r\n                      }}\r\n                    >\r\n                      <Box sx={{ mb: 2 }}>{module.icon}</Box>\r\n                      <Typography\r\n                        variant=\"h5\"\r\n                        color={colors.grey[100]}\r\n                        fontWeight=\"bold\"\r\n                        sx={{ mb: 1 }}\r\n                      >\r\n                        {module.title}\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color={colors.grey[300]}\r\n                        sx={{ mb: 2 }}\r\n                      >\r\n                        {module.description}\r\n                      </Typography>\r\n                      <Box\r\n                        sx={{\r\n                          width: \"100%\",\r\n                          height: 2,\r\n                          backgroundColor: colors.secondary[500],\r\n                          borderRadius: 1,\r\n                        }}\r\n                      />\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    </PermissionGate>\r\n  );\r\n};\r\n\r\nexport default ClearancesDashboard;\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2M9 17H7v-7h2zm4 0h-2V7h2zm4 0h-2v-4h2z\"\n}), 'Assessment');"],"names":["getCardActionAreaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionAreaRoot","styled","ButtonBase","name","overridesResolver","props","styles","root","_ref","theme","display","textAlign","borderRadius","width","concat","cardActionAreaClasses","focusHighlight","opacity","vars","palette","action","hoverOpacity","focusVisible","focusOpacity","CardActionAreaFocusHighlight","_ref2","overflow","pointerEvents","position","top","right","bottom","left","backgroundColor","transition","transitions","create","duration","short","React","inProps","ref","useDefaultProps","children","className","focusVisibleClassName","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","_jsxs","_extends","clsx","_jsx","createSvgIcon","d","ClearancesDashboard","useTheme","colors","tokens","navigate","useNavigate","clearanceModules","id","title","description","icon","AssessmentIcon","sx","fontSize","color","secondary","path","requiredPermission","CheckCircleIcon","ScienceIcon","PermissionGate","requiredPermissions","Box","m","justifyContent","alignItems","Typography","variant","grey","fontWeight","mb","mt","Grid","container","spacing","map","module","item","xs","md","lg","Card","height","transform","boxShadow","CardActionArea","onClick","handleModuleClick","p","CardContent","flexDirection"],"sourceRoot":""}