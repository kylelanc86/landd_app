{"version":3,"file":"static/js/200.9f3f24a0.chunk.js","mappings":"6PAEO,SAASA,EAA8BC,GAC5C,OAAOC,EAAAA,EAAAA,IAAqB,oBAAqBD,EACnD,CACA,MACA,GAD8BE,EAAAA,EAAAA,GAAuB,oBAAqB,CAAC,OAAQ,eAAgB,mB,0BCDnG,MAAMC,EAAY,CAAC,WAAY,YAAa,yBAqBtCC,GAAqBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAY,CAC5CC,KAAM,oBACNP,KAAM,OACNQ,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOC,MAHpBN,EAIxBO,IAAA,IAAC,MACFC,GACDD,EAAA,MAAM,CACLE,QAAS,QACTC,UAAW,UACXC,aAAc,UAEdC,MAAO,OACP,CAAC,YAADC,OAAaC,EAAsBC,iBAAmB,CACpDC,SAAUR,EAAMS,MAAQT,GAAOU,QAAQC,OAAOC,aAC9C,uBAAwB,CACtBJ,QAAS,IAGb,CAAC,KAADH,OAAMC,EAAsBO,aAAY,MAAAR,OAAKC,EAAsBC,iBAAmB,CACpFC,SAAUR,EAAMS,MAAQT,GAAOU,QAAQC,OAAOG,cAEjD,IACKC,GAA+BvB,EAAAA,EAAAA,IAAO,OAAQ,CAClDE,KAAM,oBACNP,KAAM,iBACNQ,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOU,gBAHVf,EAIlCwB,IAAA,IAAC,MACFhB,GACDgB,EAAA,MAAM,CACLC,SAAU,SACVC,cAAe,OACfC,SAAU,WACVC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,EACNpB,aAAc,UACdK,QAAS,EACTgB,gBAAiB,eACjBC,WAAYzB,EAAM0B,YAAYC,OAAO,UAAW,CAC9CC,SAAU5B,EAAM0B,YAAYE,SAASC,QAExC,IAoDD,EAnDoCC,EAAAA,YAAiB,SAAwBC,EAASC,GACpF,MAAMpC,GAAQqC,EAAAA,EAAAA,GAAgB,CAC5BrC,MAAOmC,EACPrC,KAAM,uBAEF,SACFwC,EAAQ,UACRC,EAAS,sBACTC,GACExC,EACJyC,GAAQC,EAAAA,EAAAA,GAA8B1C,EAAON,GACzCiD,EAAa3C,EACb4C,EAjEkBD,KACxB,MAAM,QACJC,GACED,EAKJ,OAAOE,EAAAA,EAAAA,GAJO,CACZ3C,KAAM,CAAC,QACPS,eAAgB,CAAC,mBAEUrB,EAA+BsD,EAAQ,EAyDpDE,CAAkBH,GAClC,OAAoBI,EAAAA,EAAAA,MAAMpD,GAAoBqD,EAAAA,EAAAA,GAAS,CACrDT,WAAWU,EAAAA,EAAAA,GAAKL,EAAQ1C,KAAMqC,GAC9BC,uBAAuBS,EAAAA,EAAAA,GAAKT,EAAuBI,EAAQ3B,cAC3DmB,IAAKA,EACLO,WAAYA,GACXF,EAAO,CACRH,SAAU,CAACA,GAAuBY,EAAAA,EAAAA,KAAK/B,EAA8B,CACnEoB,UAAWK,EAAQjC,eACnBgC,WAAYA,OAGlB,G,sBCzFIQ,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACXC,EAAQ,GAAU,EAAIC,EAAeE,UAAuB,EAAID,EAAYE,KAAK,OAAQ,CACtGC,EAAG,gHACD,U,sBCTAP,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACXC,EAAQ,GAAU,EAAIC,EAAeE,UAAuB,EAAID,EAAYE,KAAK,OAAQ,CACtGC,EAAG,sHACD,a,uhBCoCJ,MAAMC,EAAuB,CAC3B,MACA,kBACA,WACA,0BACA,qBACA,cACA,MACA,QACA,WACA,iBA2nBF,EAxnB0BC,KACxB,MAAMC,EAASC,EAAAA,GACTC,GAAWC,EAAAA,EAAAA,OAEVC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAC5BK,EAASC,IAAcN,EAAAA,EAAAA,WAAS,IAChCO,GAAOC,KAAYR,EAAAA,EAAAA,UAAS,OAC5BS,GAAYC,KAAiBV,EAAAA,EAAAA,WAAS,IACtCW,GAAkBC,KAAuBZ,EAAAA,EAAAA,UAAS,OAClDa,GAAeC,KAAoBd,EAAAA,EAAAA,WAAS,IAC5Ce,GAAUC,KAAehB,EAAAA,EAAAA,UAAS,CACvCiB,MAAM,EACNC,QAAS,GACTC,SAAU,aAGLC,GAAMC,KAAWrB,EAAAA,EAAAA,UAAS,CAC/BsB,UAAW,GACXC,cAAe,GACfC,cAAe,cACfC,IAAK,GACLC,mBAAoB,GACpBC,eAAe,EACfC,oBAAqB,KACrBC,sBAAuB,GACvBC,MAAO,MAITC,EAAAA,EAAAA,YAAU,KACRC,IAAW,GACV,IAEH,MAAMA,GAAYC,UAChB,IACE3B,GAAW,GACX,MAAO4B,EAAgBC,EAAcC,SAAmBC,QAAQC,IAAI,CAClEC,EAAAA,EAAyBC,SACzBC,EAAAA,eAAeD,OAAO,CACpBE,MAAO,IACPC,OACE,yHAEJC,EAAAA,GAAYJ,WAGdK,QAAQC,IAAI,2BAA4BZ,GACxCW,QAAQC,IAAI,yBAA0BX,GACtCU,QAAQC,IAAI,qCAAsCX,GAClDU,QAAQC,IACN,8BACAX,EAAeY,OAAOC,KAAKb,GAAgB,kBAE7CU,QAAQC,IAAI,sBAAuBV,GAEnCrC,EACEmC,EAAepC,YAAcoC,EAAee,MAAQf,GAAkB,IAIxE,IAAIgB,EAAgB,GAChBf,IAEEA,EAAac,MAAQE,MAAMC,QAAQjB,EAAac,MAClDC,EAAgBf,EAAac,KACpBE,MAAMC,QAAQjB,GACvBe,EAAgBf,EAEhBA,EAAac,MACbd,EAAac,KAAKA,MAClBE,MAAMC,QAAQjB,EAAac,KAAKA,QAEhCC,EAAgBf,EAAac,KAAKA,OAGtCJ,QAAQC,IAAI,kBAAmBI,GAC/BL,QAAQC,IAAI,yBAA0BI,EAAcG,QACpDR,QAAQC,IAAI,0BAA2BI,EAAc,IACrDhD,EAAYgD,GAGZ,MAAMI,GAAelB,EAAUa,MAAQb,GAAWmB,QAC/CC,GAASA,EAAKC,WAEjBrD,EAASkD,EACX,CAAE,MAAOI,GACPb,QAAQtC,MAAM,uBAAwBmD,GACtClD,GAAS,sBACX,CAAC,QACCF,GAAW,EACb,GAqHIqD,GAAYA,KAChBtC,GAAQ,CACNC,UAAW,GACXC,cAAe,GACfC,cAAe,cACfC,IAAK,GACLC,mBAAoB,GACpBC,eAAe,EACfC,oBAAqB,KACrBC,sBAAuB,GACvBC,MAAO,IACP,EAGE8B,GAAkBjB,IACtB,OAAQA,GACN,IAAK,WACH,MAAO,UACT,IAAK,cACH,MAAO,UACT,IAAK,qBACH,MAAO,OACT,QACE,MAAO,UACX,EAGIkB,GAAkBvC,IAEtB,IAAK6B,MAAMC,QAAQnD,GAEjB,OADA4C,QAAQiB,KAAK,4BAA6B7D,GACnC,kBAIT,MAAM8D,GAA0B,OAATzC,QAAS,IAATA,OAAS,EAATA,EAAW0C,MAAO1C,EACnC2C,EAAUhE,EAASiE,MAAMC,GAAMA,EAAEH,MAAQD,IAC/C,OAAOE,EAAUA,EAAQG,UAAY,iBAAiB,EAGlDC,GAAyB/C,IAE7B,IAAK6B,MAAMC,QAAQnD,GAEjB,OADA4C,QAAQiB,KAAK,4BAA6B7D,GACnC,kBAIT,MAAM8D,GAA0B,OAATzC,QAAS,IAATA,OAAS,EAATA,EAAW0C,MAAO1C,EACnC2C,EAAUhE,EAASiE,MAAMC,GAAMA,EAAEH,MAAQD,IAC/C,OAAOE,EAAUA,EAAQtI,KAAO,iBAAiB,EAGnD,OAAI0E,GAEAtB,EAAAA,EAAAA,KAACuF,EAAAA,EAAG,CACFpI,QAAQ,OACRqI,eAAe,SACfC,WAAW,SACXC,OAAO,QAAOtG,UAEdY,EAAAA,EAAAA,KAAC2F,EAAAA,EAAgB,MAKnBnE,IAEAxB,EAAAA,EAAAA,KAACuF,EAAAA,EAAG,CAACK,EAAE,OAAMxG,UACXY,EAAAA,EAAAA,KAAC6F,EAAAA,EAAK,CAACzD,SAAS,QAAOhD,SAAEoC,QAM7BxB,EAAAA,EAAAA,KAAC8F,EAAAA,EAAc,CAACC,oBAAqB,CAAC,iBAAiB3G,UACrDS,EAAAA,EAAAA,MAAC0F,EAAAA,EAAG,CAACK,EAAE,OAAMxG,SAAA,EACXS,EAAAA,EAAAA,MAAC0F,EAAAA,EAAG,CAACpI,QAAQ,OAAOqI,eAAe,gBAAgBC,WAAW,SAAQrG,SAAA,EACpEY,EAAAA,EAAAA,KAACgG,EAAAA,EAAU,CACTC,QAAQ,KACRC,MAAOvF,EAAOwF,KAAK,KACnBC,WAAW,OACXC,GAAI,CAAEC,GAAI,OAAQlH,SACnB,yBAGDY,EAAAA,EAAAA,KAACuG,EAAAA,EAAM,CACLN,QAAQ,YACRC,MAAM,YACNM,QAASA,KACP3E,GAAoB,MACpB+C,KACAjD,IAAc,EAAK,EAErB8E,WAAWzG,EAAAA,EAAAA,KAAC0G,EAAAA,EAAO,IAAItH,SACxB,sBAKHY,EAAAA,EAAAA,KAAC2G,EAAAA,EAAI,CAACN,GAAI,CAAEO,GAAI,GAAIxH,UAClBY,EAAAA,EAAAA,KAAC6G,EAAAA,EAAW,CAAAzH,SACTkC,GACCtB,EAAAA,EAAAA,KAACuF,EAAAA,EAAG,CACFpI,QAAQ,OACRqI,eAAe,SACfC,WAAW,SACXC,OAAO,QAAOtG,UAEdY,EAAAA,EAAAA,KAAC2F,EAAAA,EAAgB,OAGnB3F,EAAAA,EAAAA,KAAC8G,EAAAA,EAAc,CAACC,UAAWC,EAAAA,EAAM5H,UAC/BS,EAAAA,EAAAA,MAACoH,EAAAA,EAAK,CAAA7H,SAAA,EACJY,EAAAA,EAAAA,KAACkH,EAAAA,EAAS,CAAA9H,UACRS,EAAAA,EAAAA,MAACsH,EAAAA,EAAQ,CAAA/H,SAAA,EACPY,EAAAA,EAAAA,KAACoH,EAAAA,EAAS,CAAAhI,SAAC,gBACXY,EAAAA,EAAAA,KAACoH,EAAAA,EAAS,CAAAhI,SAAC,oBACXY,EAAAA,EAAAA,KAACoH,EAAAA,EAAS,CAAAhI,SAAC,kBACXY,EAAAA,EAAAA,KAACoH,EAAAA,EAAS,CAAAhI,SAAC,UACXY,EAAAA,EAAAA,KAACoH,EAAAA,EAAS,CAAAhI,SAAC,oBACXY,EAAAA,EAAAA,KAACoH,EAAAA,EAAS,CAAAhI,SAAC,YACXY,EAAAA,EAAAA,KAACoH,EAAAA,EAAS,CAAAhI,SAAC,kBAGfY,EAAAA,EAAAA,KAACqH,EAAAA,EAAS,CAAAjI,SACPgF,MAAMC,QAAQtD,KACZA,GAAc,IAAIuG,KAAKC,IACtB1H,EAAAA,EAAAA,MAACsH,EAAAA,EAAQ,CAAA/H,SAAA,EACPY,EAAAA,EAAAA,KAACoH,EAAAA,EAAS,CAAAhI,SACP0F,GAAeyC,EAAUhF,cAE5BvC,EAAAA,EAAAA,KAACoH,EAAAA,EAAS,CAAAhI,SACPmI,EAAU/E,cACP,IAAIgF,KACFD,EAAU/E,eACViF,mBAAmB,QAAS,CAC5BC,IAAK,UACLC,MAAO,UACPC,KAAM,YAER,SAEN5H,EAAAA,EAAAA,KAACoH,EAAAA,EAAS,CAAAhI,SACPkG,GAAsBiC,EAAUhF,cAEnCvC,EAAAA,EAAAA,KAACoH,EAAAA,EAAS,CAAAhI,SAAEmI,EAAU9E,iBACtBzC,EAAAA,EAAAA,KAACoH,EAAAA,EAAS,CAAAhI,UACRY,EAAAA,EAAAA,KAAC6H,EAAAA,EAAI,CACHC,MAAOP,EAAU3E,cAAgB,MAAQ,KACzCsD,MACEqB,EAAU3E,cAAgB,UAAY,UAExCmF,KAAK,aAGT/H,EAAAA,EAAAA,KAACoH,EAAAA,EAAS,CAAAhI,UACRY,EAAAA,EAAAA,KAAC6H,EAAAA,EAAI,CACHC,MAAOP,EAAU3D,OACjBsC,MAAOrB,GAAe0C,EAAU3D,QAChCmE,KAAK,aAGTlI,EAAAA,EAAAA,MAACuH,EAAAA,EAAS,CAAAhI,SAAA,EACRY,EAAAA,EAAAA,KAACgI,EAAAA,EAAU,CACTxB,QAASA,IA/MZe,KACvB1G,EAAS,eAADtD,OAAgBgK,EAAUtC,IAAG,UAAS,EA8MLgD,CAAgBV,GAC/BrB,MAAM,OACN6B,KAAK,QACLG,MAAM,aAAY9I,UAElBY,EAAAA,EAAAA,KAACmI,EAAAA,EAAc,OAEjBnI,EAAAA,EAAAA,KAACgI,EAAAA,EAAU,CACTxB,QAASA,IA9PjBe,KAClB1F,GAAoB0F,GACpBjF,GAAQ,CACNC,UAAWgF,EAAUhF,UAAU0C,KAAOsC,EAAUhF,UAChDC,cAAe+E,EAAU/E,cACrB,IAAIgF,KAAKD,EAAU/E,eAAe4F,cAAcC,MAAM,KAAK,GAC3D,GACJ5F,cAAe8E,EAAU9E,cACzBC,IAAK6E,EAAU7E,IACfC,mBAAoB4E,EAAU5E,mBAC9BC,cAAe2E,EAAU3E,gBAAiB,EAC1CC,oBAAqB0E,EAAU1E,qBAAuB,KACtDC,sBAAuByE,EAAUzE,uBAAyB,GAC1DC,MAAOwE,EAAUxE,OAAS,KAE5BpB,IAAc,EAAK,EA+OsB2G,CAAWf,GAC1BrB,MAAM,UACN6B,KAAK,QACLG,MAAM,OAAM9I,UAEZY,EAAAA,EAAAA,KAACuI,EAAAA,EAAQ,OAEXvI,EAAAA,EAAAA,KAACgI,EAAAA,EAAU,CACTxB,QAASA,IA3NXtD,WACxB,IACEY,QAAQC,IAAI,2CAA4CwD,GACxDxF,IAAiB,GAGjB+B,QAAQC,IAAI,mCACZ,MAAMyE,QAAsBhF,EAAAA,EAAyBiF,QACnDlB,EAAUtC,KAEZnB,QAAQC,IAAI,uBAAwByE,GAGpC1E,QAAQC,IAAI,sCACZ,MAAM2E,QAAiBC,EAAAA,EAAAA,yBACrB,qBACAH,GAEF1E,QAAQC,IAAI,sCAAuC2E,GAEnDzG,GAAY,CACVC,MAAM,EACNC,QAAQ,+BAAD5E,OAAiCmL,GACxCtG,SAAU,WAEd,CAAE,MAAOuC,GACPb,QAAQtC,MAAM,wBAAyBmD,GACvC1C,GAAY,CACVC,MAAM,EACNC,QAAS,yBACTC,SAAU,SAEd,CAAC,QACC0B,QAAQC,IAAI,kCACZhC,IAAiB,EACnB,GAwLyC6G,CAAkBrB,GACjCrB,MAAM,YACN6B,KAAK,QACLc,SAAU/G,GACVoG,MAAM,eAAc9I,UAEpBY,EAAAA,EAAAA,KAAC8I,EAAAA,EAAgB,OAEnB9I,EAAAA,EAAAA,KAACgI,EAAAA,EAAU,CACTxB,QAASA,IA7PhBtD,WACnB,GAAI6F,OAAOC,QAAQ,mDACjB,UACQxF,EAAAA,EAAyByF,OAAO1B,EAAUtC,KAChDhD,GAAY,CACVC,MAAM,EACNC,QAAS,iCACTC,SAAU,YAEZa,IACF,CAAE,MAAO0B,GACPb,QAAQtC,MAAM,4BAA6BmD,GAC3C1C,GAAY,CACVC,MAAM,EACNC,QAAS,6BACTC,SAAU,SAEd,CACF,EA2OyC8G,CAAa3B,GAC5BrB,MAAM,QACN6B,KAAK,QACLG,MAAM,SAAQ9I,UAEdY,EAAAA,EAAAA,KAACmJ,EAAAA,EAAU,WAnEF5B,EAAUtC,mBAgFzCpF,EAAAA,EAAAA,MAACuJ,EAAAA,EAAM,CACLlH,KAAMR,GACN2H,QAASA,IAAM1H,IAAc,GAC7B2H,SAAS,KACTC,WAAS,EAAAnK,SAAA,EAETY,EAAAA,EAAAA,KAACwJ,EAAAA,EAAW,CAAApK,SACTwC,GAAmB,iBAAmB,uBAEzC/B,EAAAA,EAAAA,MAAA,QAAM4J,SA3UOvG,UACnBwG,EAAEC,iBACF,IACM/H,UACI4B,EAAAA,EAAyBoG,OAAOhI,GAAiBqD,IAAK5C,IAC5DJ,GAAY,CACVC,MAAM,EACNC,QAAS,iCACTC,SAAU,oBAGNoB,EAAAA,EAAyB3E,OAAOwD,IACtCJ,GAAY,CACVC,MAAM,EACNC,QAAS,iCACTC,SAAU,aAIdT,IAAc,GACdE,GAAoB,MACpB+C,KACA3B,IACF,CAAE,MAAO0B,GACPb,QAAQtC,MAAM,0BAA2BmD,GACzC1C,GAAY,CACVC,MAAM,EACNC,QAAS,2BACTC,SAAU,SAEd,GA6SmChD,SAAA,EAC3BY,EAAAA,EAAAA,KAAC6J,EAAAA,EAAa,CAAAzK,UACZS,EAAAA,EAAAA,MAACiK,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAE5K,SAAA,EACzBY,EAAAA,EAAAA,KAAC8J,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAG9K,UAChBS,EAAAA,EAAAA,MAACsK,EAAAA,EAAW,CAACZ,WAAS,EAACa,UAAQ,EAAAhL,SAAA,EAC7BY,EAAAA,EAAAA,KAACqK,EAAAA,EAAU,CAAAjL,SAAC,aACZY,EAAAA,EAAAA,KAACsK,EAAAA,EAAM,CACLC,MAAOlI,GAAKE,UACZiI,SAAWd,GACTpH,IAAOmI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIpI,IAAI,IAAEE,UAAWmH,EAAEgB,OAAOH,SAEzCzC,MAAM,UAAS1I,UAEb8B,GAAY,IAAIoD,OAAS,GACxBpD,GAAY,IAAIoG,KAAKpC,IACpBrF,EAAAA,EAAAA,MAAC8K,EAAAA,EAAQ,CAAmBJ,MAAOrF,EAAQD,IAAI7F,SAAA,CAC5C8F,EAAQG,UAAU,KAAGH,EAAQtI,OADjBsI,EAAQD,QAKzBjF,EAAAA,EAAAA,KAAC2K,EAAAA,EAAQ,CAAC9B,UAAQ,EAAAzJ,SAAC,kCAK3BY,EAAAA,EAAAA,KAAC8J,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIU,GAAI,EAAExL,UACvBY,EAAAA,EAAAA,KAAC6K,EAAAA,EAAS,CACRtB,WAAS,EACTuB,KAAK,OACLhD,MAAM,iBACNyC,MAAOlI,GAAKG,cACZgI,SAAWd,GACTpH,IAAOmI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIpI,IAAI,IAAEG,cAAekH,EAAEgB,OAAOH,SAE7CH,UAAQ,EACRW,gBAAiB,CAAEC,QAAQ,QAG/BhL,EAAAA,EAAAA,KAAC8J,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIU,GAAI,EAAExL,UACvBS,EAAAA,EAAAA,MAACsK,EAAAA,EAAW,CAACZ,WAAS,EAACa,UAAQ,EAAAhL,SAAA,EAC7BY,EAAAA,EAAAA,KAACqK,EAAAA,EAAU,CAAAjL,SAAC,oBACZS,EAAAA,EAAAA,MAACyK,EAAAA,EAAM,CACLC,MAAOlI,GAAKI,cACZ+H,SAAWd,GACTpH,IAAOmI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIpI,IAAI,IAAEI,cAAeiH,EAAEgB,OAAOH,SAE7CzC,MAAM,iBAAgB1I,SAAA,EAEtBY,EAAAA,EAAAA,KAAC2K,EAAAA,EAAQ,CAACJ,MAAM,cAAanL,SAAC,iBAC9BY,EAAAA,EAAAA,KAAC2K,EAAAA,EAAQ,CAACJ,MAAM,UAASnL,SAAC,qBAIhCY,EAAAA,EAAAA,KAAC8J,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIU,GAAI,EAAExL,UACvBS,EAAAA,EAAAA,MAACsK,EAAAA,EAAW,CAACZ,WAAS,EAACa,UAAQ,EAAAhL,SAAA,EAC7BY,EAAAA,EAAAA,KAACqK,EAAAA,EAAU,CAAAjL,SAAC,SACZY,EAAAA,EAAAA,KAACsK,EAAAA,EAAM,CACLC,MAAOlI,GAAKK,IACZ8H,SAAWd,GACTpH,IAAOmI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIpI,IAAI,IAAEK,IAAKgH,EAAEgB,OAAOH,SAEnCzC,MAAM,MAAK1I,UAETgC,GAAS,IAAIkG,KAAK7C,IAClB5E,EAAAA,EAAAA,MAAC8K,EAAAA,EAAQ,CAEPJ,MAAK,GAAAhN,OAAKkH,EAAKwG,UAAS,KAAA1N,OAAIkH,EAAKyG,UAAW9L,SAAA,CAE3CqF,EAAKwG,UAAU,IAAExG,EAAKyG,WAHlBzG,EAAKQ,eASpBjF,EAAAA,EAAAA,KAAC8J,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIU,GAAI,EAAExL,UACvBS,EAAAA,EAAAA,MAACsK,EAAAA,EAAW,CAACZ,WAAS,EAACa,UAAQ,EAAAhL,SAAA,EAC7BY,EAAAA,EAAAA,KAACqK,EAAAA,EAAU,CAAAjL,SAAC,yBACZY,EAAAA,EAAAA,KAACsK,EAAAA,EAAM,CACLC,MAAOlI,GAAKM,mBACZ6H,SAAWd,GACTpH,IAAOmI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIpI,IAAI,IAAEM,mBAAoB+G,EAAEgB,OAAOH,SAElDzC,MAAM,sBAAqB1I,SAE1BqB,EAAqB6G,KAAK6D,IACzBnL,EAAAA,EAAAA,KAAC2K,EAAAA,EAAQ,CAAkBJ,MAAOY,EAAW/L,SAC1C+L,GADYA,aAOvBnL,EAAAA,EAAAA,KAAC8J,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAG9K,UAChBY,EAAAA,EAAAA,KAACoL,EAAAA,EAAgB,CACfC,SACErL,EAAAA,EAAAA,KAACsL,EAAAA,EAAQ,CACPC,QAASlJ,GAAKO,cACd4H,SAAWd,GACTpH,IAAOmI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIpI,IAAI,IAAEO,cAAe8G,EAAEgB,OAAOa,WAE7CrF,MAAM,YAGV4B,MAAM,oCAGTzF,GAAKO,gBACJ/C,EAAAA,EAAAA,MAACiK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAG9K,SAAA,EAChBY,EAAAA,EAAAA,KAAA,SACEwL,OAAO,OACPC,MAAO,CAAEtO,QAAS,QAClBuO,GAAG,+BACHZ,KAAK,OACLN,SAAWd,IACT,MAAMiC,EAAOjC,EAAEgB,OAAOkB,MAAM,GAC5B,GAAID,EAAM,CACR,MAAME,EAAS,IAAIC,WACnBD,EAAOE,OAAUC,IAEf,MACMC,EADUD,EAAMtB,OAAOwB,OACF7D,MAAM,KAAK,GACtC/F,IAAOmI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACJpI,IAAI,IACPQ,oBAAqBoJ,IACrB,EAEJJ,EAAOM,cAAcR,EACvB,MAGJ3L,EAAAA,EAAAA,KAAA,SAAOoM,QAAQ,+BAA8BhN,UAC3CY,EAAAA,EAAAA,KAACuG,EAAAA,EAAM,CACLN,QAAQ,WACRc,UAAU,OACVN,WAAWzG,EAAAA,EAAAA,KAAC8I,EAAAA,EAAgB,IAAI1J,SACjC,yCAIFiD,GAAKQ,sBACJ7C,EAAAA,EAAAA,KAACgG,EAAAA,EAAU,CACTC,QAAQ,QACRC,MAAM,eACNG,GAAI,CAAEO,GAAI,GAAIxH,SACf,4CAMPY,EAAAA,EAAAA,KAAC8J,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAG9K,UAChBY,EAAAA,EAAAA,KAAC6K,EAAAA,EAAS,CACRtB,WAAS,EACTzB,MAAM,0BACNyC,MAAOlI,GAAKS,sBACZ0H,SAAWd,GACTpH,IAAOmI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACJpI,IAAI,IACPS,sBAAuB4G,EAAEgB,OAAOH,SAGpC8B,WAAS,EACTC,KAAM,OAGVtM,EAAAA,EAAAA,KAAC8J,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAG9K,UAChBY,EAAAA,EAAAA,KAAC6K,EAAAA,EAAS,CACRtB,WAAS,EACTzB,MAAM,QACNyC,MAAOlI,GAAKU,MACZyH,SAAWd,GACTpH,IAAOmI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIpI,IAAI,IAAEU,MAAO2G,EAAEgB,OAAOH,SAErC8B,WAAS,EACTC,KAAM,YAKdzM,EAAAA,EAAAA,MAAC0M,EAAAA,EAAa,CAAAnN,SAAA,EACZY,EAAAA,EAAAA,KAACuG,EAAAA,EAAM,CAACC,QAASA,IAAM7E,IAAc,GAAOvC,SAAC,YAC7CY,EAAAA,EAAAA,KAACuG,EAAAA,EAAM,CAACuE,KAAK,SAAS7E,QAAQ,YAAW7G,SACtCwC,GAAmB,SAAW,qBAOvC5B,EAAAA,EAAAA,KAACwM,EAAAA,EAAQ,CACPtK,KAAMF,GAASE,KACfuK,iBAAkB,IAClBpD,QAASA,IAAMpH,IAAWwI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIzI,IAAQ,IAAEE,MAAM,KAAS9C,UAEzDY,EAAAA,EAAAA,KAAC6F,EAAAA,EAAK,CACJwD,QAASA,IAAMpH,IAAWwI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIzI,IAAQ,IAAEE,MAAM,KAChDE,SAAUJ,GAASI,SAAShD,SAE3B4C,GAASG,gBAID,C,wIC9qBd,MAAMuK,EAAsBxJ,MAAOyJ,EAAUC,EAAYC,KAE9D,MAAMC,EAAM,IAAIC,EAAAA,QAGVC,EAAYF,EAAIG,SAASC,SAASC,WAClCC,EAAaN,EAAIG,SAASC,SAASG,YACnCC,EAAS,GACTC,EAAeP,EAAa,GAElC,IAAIQ,EAAIF,EAGR,MAAMG,EAAU,SAACC,GAA4D,IAAtDC,EAAQC,UAAAtJ,OAAA,QAAAuJ,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAAIE,EAASF,UAAAtJ,OAAA,QAAAuJ,IAAAD,UAAA,GAAAA,UAAA,GAAG,SAAU5D,EAAO4D,UAAAtJ,OAAA,QAAAuJ,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACpE,IAAKF,EAAM,OAAOF,EAElBV,EAAIiB,YAAYJ,GAChBb,EAAIkB,QAAQ,YAAaF,GAEzB,MAAMG,EAAQnB,EAAIoB,gBAAgBR,EAAMH,GAIxC,OAHAT,EAAIY,KAAKA,EAAMJ,EAAQE,EAAG,CAAElE,SAAUiE,IAEtCC,GAAMS,EAAM3J,OAASqJ,EAAW,IAAO3D,EAChCwD,CACT,EAGMW,EAAY,SAACT,GACjB,OAAOD,EAAQC,EADgBE,UAAAtJ,OAAA,QAAAuJ,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAAaA,UAAAtJ,OAAA,QAAAuJ,IAAAD,UAAA,GAAAA,UAAA,GAAG,OACR,GAC5C,EAGAJ,EAAIW,EACFtB,EACEF,EAASyB,iBAAiBC,iBAAmB,0CAE/C,GACA,QAEFb,EAAIC,EACFZ,EAAoBF,EAASyB,iBAAiBE,oBAAsB,IACpE,GACA,SACA,IAIFd,GAAK,GAGDb,EAAS4B,iBACXf,EAAIW,EAAU,kBAAmB,GAAI,QACrCnK,OAAOwK,QAAQ7B,EAAS4B,gBAAgBE,SAAQxR,IAAmB,IAAjByR,EAAKnE,GAAMtN,EAC3D,MAAM6K,EAAQ4G,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,GAAGC,QAAQ,WAAY,OAC7EtB,EAAIC,EAAQ,GAADlQ,OAAIuK,EAAK,MAAAvK,OAAKgN,GAAS,GAAI,SAAU,EAAE,IAEpDiD,GAAK,IAIPA,EAAIW,EACFtB,EACEF,EAASyB,iBAAiBW,wBAA0B,sBAEtD,GACA,QAEFvB,EAAIC,EACFZ,EAAoBF,EAASyB,iBAAiBY,wBAA0B,IACxE,GACA,SACA,GAEFxB,EAAIC,EACFZ,EAAoBF,EAASyB,iBAAiBa,qBAAuB,IACrE,GACA,SACA,GAEFzB,EAAIC,EACFZ,EAAoBF,EAASyB,iBAAiBc,mBAAqB,IACnE,GACA,SACA,GAIF1B,EAAIC,EAAQ,6BAA8B,GAAI,OAAQ,GAGpC,CAChB,CAAC,OAAQ,gBAAiB,YAAa,UACvC,CAAC,UAAW,oBAAqB,OAAQ,QACzC,CAAC,WAAY,oBAAqB,OAAQ,QAC1C,CAAC,cAAe,oBAAqB,OAAQ,SAGrCgB,SAAQ,CAACU,EAAKC,KACtB,MAAMC,EAAqB,IAAVD,EACXtB,EAAYuB,EAAW,OAAS,SAChC1B,EAAW0B,EAAW,GAAK,EAG3BC,EAAY,CAAC,GAAI,GAAI,GAAI,IAC/B,IAAIC,EAAIjC,EAER6B,EAAIV,SAAQ,CAACe,EAAMC,KACjB3C,EAAIiB,YAAYJ,GAChBb,EAAIkB,QAAQ,YAAaF,GACzBhB,EAAIY,KAAK8B,EAAMD,EAAG/B,EAAG,CAAElE,SAAUgG,EAAUG,KAC3CF,GAAKD,EAAUG,GAAY,CAAC,IAG9BjC,GAAgB,IAAXG,EAAiB,CAAC,IAGzBH,GAAK,GAGDA,EAAIJ,EAAa,MACnBN,EAAI4C,UACJlC,EAAIF,GAINE,EAAIW,EACFtB,EACEF,EAASyB,iBAAiBuB,6BAA+B,2BAE3D,GACA,QAEFnC,EAAIC,EACFZ,EAAoBF,EAASyB,iBAAiBwB,4BAA8B,IAC5E,GACA,SACA,GAEFpC,EAAIC,EACFZ,EAAoBF,EAASyB,iBAAiByB,oBAAsB,IACpE,GACA,SACA,GAEFrC,EAAIC,EACFZ,EAAoBF,EAASyB,iBAAiB0B,aAAe,IAC7D,GACA,SACA,GAEFtC,EAAIC,EACFZ,EAAoBF,EAASyB,iBAAiB2B,YAAc,IAC5D,GACA,SACA,GAEFvC,EAAIC,EACFZ,EAAoBF,EAASyB,iBAAiB4B,gBAAkB,IAChE,GACA,OACA,GAIExC,EAAIJ,EAAa,MACnBN,EAAI4C,UACJlC,EAAIF,GAINE,EAAIW,EACFtB,EACEF,EAASyB,iBAAiB6B,iBAAmB,0BAE/C,GACA,QAEFzC,EAAIC,EACFZ,EAAoBF,EAASyB,iBAAiB8B,wBAA0B,IACxE,GACA,SACA,GAEF1C,EAAIC,EAAQ,UAADlQ,OACJsP,EAAoBF,EAASyB,iBAAiB+B,cAAgB,KACnE,GACA,SACA,GAEF3C,EAAIC,EAAQ,UAADlQ,OACJsP,EAAoBF,EAASyB,iBAAiBgC,cAAgB,KACnE,GACA,SACA,GAEF5C,EAAIC,EACFZ,EAAoBF,EAASyB,iBAAiBiC,kBAAoB,IAClE,GACA,SACA,GAEF7C,EAAIC,EAAQ,UAADlQ,OACJsP,EAAoBF,EAASyB,iBAAiBkC,cAAgB,KACnE,GACA,SACA,GAEF9C,EAAIC,EAAQ,UAADlQ,OACJsP,EAAoBF,EAASyB,iBAAiBmC,cAAgB,KACnE,GACA,SACA,GAEF/C,EAAIC,EAAQ,UAADlQ,OACJsP,EAAoBF,EAASyB,iBAAiBoC,cAAgB,KACnE,GACA,SACA,GAIEhD,EAAIJ,EAAa,MACnBN,EAAI4C,UACJlC,EAAIF,GAINE,EAAIW,EACFtB,EACEF,EAASyB,iBAAiBqC,kBAAoB,4BAEhD,GACA,QAEFjD,EAAIC,EACFZ,EAAoBF,EAASyB,iBAAiBsC,yBAA2B,IACzE,GACA,SACA,GAEFlD,EAAIC,EAAQ,UAADlQ,OACJsP,EAAoBF,EAASyB,iBAAiBuC,mBAAqB,KACxE,GACA,SACA,GAEFnD,EAAIC,EAAQ,UAADlQ,OACJsP,EAAoBF,EAASyB,iBAAiBwC,mBAAqB,KACxE,GACA,SACA,GAEFpD,EAAIC,EAAQ,UAADlQ,OACJsP,EAAoBF,EAASyB,iBAAiByC,mBAAqB,KACxE,GACA,SACA,GAIFrD,EAAIW,EACFtB,EACEF,EAASyB,iBAAiB0C,kBAAoB,eAEhD,GACA,QAEFtD,EAAIC,EACFZ,EAAoBF,EAASyB,iBAAiB2C,iBAAmB,IACjE,GACA,SACA,GAIEvD,EAAIJ,EAAa,MACnBN,EAAI4C,UACJlC,EAAIF,GAINE,EAAIW,EAAU,uBAAwB,GAAI,QAC1CX,GAAK,GAGLV,EAAIkE,aAAa,IACjBlE,EAAImE,KAAK3D,EAAQE,EAAGF,IAAaE,GACjCA,GAAK,EAGLA,EAAIC,EAAQ,mBAAoB,GAAI,SAAU,GAC9CD,EAAIC,EAAQ,oBAAqB,GAAI,SAAU,GAC/CD,EAAIC,EAAQ,qBAAsB,GAAI,SAAU,GAEhDD,GAAK,GAGLA,EAAIC,EACFZ,EAAoBF,EAASyB,iBAAiB8C,YAAc,IAC5D,EACA,SACA,GAIF,MAAMxI,EAAQ,uCAAAnL,QAA0C,IAAIiK,MAAOY,cAAcC,MAAM,KAAK,GAAE,QAG9F,OAFAyE,EAAIqE,KAAKzI,GAEFA,CAAQ,EASJ0I,EAAkBlO,MAAOmO,EAAcnN,IAC3CyE,EAAwB0I,EAAcnN,GAGlCyE,EAA0BzF,MAAOmO,EAAcnN,KAC1D,IAAK,IAADoN,EACFxN,QAAQC,IAAI,iDAAkDG,GAG9D,MAIMqN,EAAU,GAAAhU,OAFZ,8CAE4B,uCAAAA,OAAsCiK,KAAKgK,OAC3E1N,QAAQC,IAAI,uBAAwBwN,GAGpC,MAAME,QAAiBC,MAAMH,EAAY,CACvCI,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,UAADrU,OAAYsU,aAAaC,QAAQ,UAChD,gBAAiB,sCACjB,OAAU,WACV,QAAW,KAEbC,KAAMC,KAAKC,UAAU,CAAEC,cAAehO,MAMxC,GAHAJ,QAAQC,IAAI,mBAAoB0N,EAAS7N,QACzCE,QAAQC,IAAI,oBAAqBC,OAAOmO,YAAYV,EAASG,QAAQpD,aAEhEiD,EAASW,GAAI,CAChB,MAAMC,QAAkBZ,EAASa,OACjC,MAAM,IAAIC,MAAMF,EAAU7Q,OAAS,yBACrC,CAGA,MAAMgR,QAAgBf,EAASgB,OAC/B3O,QAAQC,IAAI,iBAAkByO,EAAQzK,KAAM,SAG5C,MAAM2K,EAAM3J,OAAO4J,IAAIC,gBAAgBJ,GACjCK,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAON,EAGZ,MAAMhK,EAAQ,sBAAAnL,QAAuC,QAAd+T,EAAApN,EAAK3B,iBAAS,IAAA+O,OAAA,EAAdA,EAAgB1U,OAAQ,SAAQ,KAAAW,QAAI,IAAIiK,MAAOY,cAAcC,MAAM,KAAK,GAAE,QAYjH,OAXAwK,EAAKI,SAAWvK,EAGhBoK,SAASf,KAAKmB,YAAYL,GAC1BA,EAAKM,QACLL,SAASf,KAAKqB,YAAYP,GAG1B9J,OAAO4J,IAAIU,gBAAgBX,GAE3B5O,QAAQC,IAAI,yCAA0C2E,GAC/CA,CAET,CAAE,MAAOlH,GAGP,MAFAsC,QAAQtC,MAAM,sCAAuCA,GACrDsC,QAAQtC,MAAM,eAAgBA,EAAM8R,OAC9B9R,CACR,E,6DC/XF,MAAM+R,EAAe,uBA4GrB,EA1GiC,CAE/B9P,OAAQP,iBAAwB,IAAjBsQ,EAAM5F,UAAAtJ,OAAA,QAAAuJ,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEvB,aADuB6F,EAAAA,EAAMC,IAAIH,EAAc,CAAEC,YACjCtP,IAClB,EAGAuE,QAASvF,gBACgBuQ,EAAAA,EAAMC,IAAI,GAADnW,OAAIgW,EAAY,KAAAhW,OAAImO,KACpCxH,KAIlBrF,OAAQqE,gBACiBuQ,EAAAA,EAAME,KAAKJ,EAAcrB,IAChChO,KAIlB0F,OAAQ1G,MAAOwI,EAAIwG,WACMuB,EAAAA,EAAMG,IAAI,GAADrW,OAAIgW,EAAY,KAAAhW,OAAImO,GAAMwG,IAC1ChO,KAIlB+E,OAAQ/F,gBACiBuQ,EAAAA,EAAMxK,OAAO,GAAD1L,OAAIgW,EAAY,KAAAhW,OAAImO,KACvCxH,KAIlB2P,aAAc3Q,MAAOwI,EAAI9H,WACA6P,EAAAA,EAAMK,MAAM,GAADvW,OAAIgW,EAAY,KAAAhW,OAAImO,EAAE,WAAW,CAAE9H,YACrDM,KAIlB6P,SAAU7Q,gBACeuQ,EAAAA,EAAMC,IAAI,GAADnW,OAAIgW,EAAY,qBAChCrP,KAIlB8P,OAAQ9Q,eAAO+Q,GAA8B,IAAlBC,EAAOtG,UAAAtJ,OAAA,QAAAuJ,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpC,MAAM4F,GAAM/I,EAAAA,EAAAA,GAAA,CACVuJ,OAAQC,GACLC,GAGL,aADuBT,EAAAA,EAAMC,IAAIH,EAAc,CAAEC,YACjCtP,IAClB,EAGAiQ,YAAajR,gBACYuQ,EAAAA,EAAMC,IAAIH,EAAc,CAC7CC,OAAQ,CAAE5P,aAEIM,KAIlBkQ,gBAAiBlR,gBACQuQ,EAAAA,EAAMC,IAAIH,EAAc,CAC7CC,OAAQ,CAAE7Q,yBAEIuB,KAIlBmQ,0BAA2BnR,MAAOwI,EAAI4I,WACbb,EAAAA,EAAME,KAAK,GAADpW,OAAIgW,EAAY,KAAAhW,OAAImO,EAAE,0BAA0B4I,IACjEpQ,KAIlBqQ,SAAUrR,gBACeuQ,EAAAA,EAAMC,IAAI,GAADnW,OAAIgW,EAAY,KAAAhW,OAAIiX,EAAW,YAC/CtQ,KAIlBuQ,QAASvR,MAAOsR,EAAaE,WACJjB,EAAAA,EAAME,KAAK,GAADpW,OAAIgW,EAAY,KAAAhW,OAAIiX,EAAW,UAAUE,IAC1DxQ,KAIlByQ,WAAYzR,MAAOsR,EAAaI,EAAQF,WACfjB,EAAAA,EAAMG,IAAI,GAADrW,OAAIgW,EAAY,KAAAhW,OAAIiX,EAAW,WAAAjX,OAAUqX,GAAUF,IACnExQ,KAIlB2Q,WAAY3R,MAAOsR,EAAaI,WACPnB,EAAAA,EAAMxK,OAAO,GAAD1L,OAAIgW,EAAY,KAAAhW,OAAIiX,EAAW,WAAAjX,OAAUqX,KAC5D1Q,KAIlB4Q,wBAAyB5R,gBACAuQ,EAAAA,EAAMC,IAAI,GAADnW,OAAIgW,EAAY,4BAAAhW,OAA2BgF,KAC3D2B,K,8OCxFpB,MAAM6Q,EAAwB9X,IAAA,IAAC,MAC7BiL,EAAK,KACL8M,EAAI,MACJ9O,EAAQ,UAAS,QACjBM,EAAO,OACPyO,GACDhY,EAAA,OACC+C,EAAAA,EAAAA,KAAC2G,EAAAA,EAAI,CACHN,IAAEoE,EAAAA,EAAAA,GAAA,CACA/E,OAAQ,OACRvI,QAAS,OACT+X,cAAe,SACfvW,WAAY,kCACZ,UAAW,CACTwW,UAAW,mBACXC,UAAW,IAETH,GAAU,CACZvW,gBAAgB,GAADnB,OAAK2I,EAAK,UACzBmP,OAAO,aAAD9X,OAAe2I,EAAK,WAE5B9G,UAEFY,EAAAA,EAAAA,KAACsV,EAAAA,EAAc,CACb9O,QAASA,EACTH,GAAI,CAAEX,OAAQ,OAAQvI,QAAS,OAAQ+X,cAAe,UAAW9V,UAEjES,EAAAA,EAAAA,MAACgH,EAAAA,EAAW,CAACR,GAAI,CAAEkP,SAAU,EAAGnY,UAAW,SAAUgI,EAAG,GAAIhG,SAAA,EAC1DY,EAAAA,EAAAA,KAACuF,EAAAA,EAAG,CAACc,GAAI,CAAEC,GAAI,EAAGnJ,QAAS,OAAQqI,eAAgB,UAAWpG,SAC3DJ,EAAAA,aAAmBgW,EAAM,CACxB3O,GAAI,CAAEsH,SAAU,GAAIzH,MAAM,GAAD3I,OAAK2I,EAAK,eAGvClG,EAAAA,EAAAA,KAACgG,EAAAA,EAAU,CAACC,QAAQ,KAAKc,UAAU,KAAKyO,cAAY,EAAApW,SACjD8I,UAIF,EA6DT,EA1DwBuN,MACRC,EAAAA,EAAAA,KACC9U,EAAAA,IACEE,EAAAA,EAAAA,MAFjB,MAGO6U,EAAeC,IAAoB3U,EAAAA,EAAAA,UAAS,MAE7C4U,EAAyB,CAC7B,CACE3N,MAAO,iBACP8M,MAAMhV,EAAAA,EAAAA,KAAC8V,EAAAA,EAAW,IAClB5P,MAAO,UACPM,QAASA,IAAMoP,EAAiB,mBAElC,CACE1N,MAAO,aACP8M,MAAMhV,EAAAA,EAAAA,KAAC+V,EAAAA,EAAc,IACrB7P,MAAO,YACPM,QAASA,IAAMoP,EAAiB,gBAYpC,OACE/V,EAAAA,EAAAA,MAAC0F,EAAAA,EAAG,CAACc,GAAI,CAAEjB,EAAG,GAAIhG,SAAA,EAChBY,EAAAA,EAAAA,KAACgW,EAAAA,EAAM,CAAC9N,MAAM,2BAIdlI,EAAAA,EAAAA,KAAC8J,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAE5K,SACxByW,EAAuBvO,KAAI,CAAC2O,EAAQ7G,KACnCpP,EAAAA,EAAAA,KAAC8J,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIU,GAAI,EAAExL,UACvBY,EAAAA,EAAAA,KAAC+U,GAAqBtK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBwL,GAAM,IACVhB,OACEU,KACkB,mBAAjBM,EAAO/N,MACJ,iBACA,kBAPqBkH,OAehB,mBAAlBuG,IA9BI3V,EAAAA,EAAAA,KAACkW,EAAAA,EAAa,IA+BA,eAAlBP,IA3BI3V,EAAAA,EAAAA,KAACU,EAAAA,QAAiB,MA4BnB,C","sources":["../node_modules/@mui/material/CardActionArea/cardActionAreaClasses.js","../node_modules/@mui/material/CardActionArea/CardActionArea.js","../node_modules/@mui/icons-material/Monitor.js","../node_modules/@mui/icons-material/Assessment.js","scenes/clearances/AsbestosClearance.jsx","utils/templatePDFGenerator.js","services/asbestosClearanceService.js","scenes/asbestos-removal/index.jsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardActionAreaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActionArea', slot);\n}\nconst cardActionAreaClasses = generateUtilityClasses('MuiCardActionArea', ['root', 'focusVisible', 'focusHighlight']);\nexport default cardActionAreaClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"focusVisibleClassName\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport cardActionAreaClasses, { getCardActionAreaUtilityClass } from './cardActionAreaClasses';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    focusHighlight: ['focusHighlight']\n  };\n  return composeClasses(slots, getCardActionAreaUtilityClass, classes);\n};\nconst CardActionAreaRoot = styled(ButtonBase, {\n  name: 'MuiCardActionArea',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  display: 'block',\n  textAlign: 'inherit',\n  borderRadius: 'inherit',\n  // for Safari to work https://github.com/mui/material-ui/issues/36285.\n  width: '100%',\n  [`&:hover .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.hoverOpacity,\n    '@media (hover: none)': {\n      opacity: 0\n    }\n  },\n  [`&.${cardActionAreaClasses.focusVisible} .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.focusOpacity\n  }\n}));\nconst CardActionAreaFocusHighlight = styled('span', {\n  name: 'MuiCardActionArea',\n  slot: 'FocusHighlight',\n  overridesResolver: (props, styles) => styles.focusHighlight\n})(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit',\n  opacity: 0,\n  backgroundColor: 'currentcolor',\n  transition: theme.transitions.create('opacity', {\n    duration: theme.transitions.duration.short\n  })\n}));\nconst CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardActionArea'\n  });\n  const {\n      children,\n      className,\n      focusVisibleClassName\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(CardActionAreaRoot, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [children, /*#__PURE__*/_jsx(CardActionAreaFocusHighlight, {\n      className: classes.focusHighlight,\n      ownerState: ownerState\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActionArea;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 3H4c-1.1 0-2 .9-2 2v11c0 1.1.9 2 2 2h3l-1 1v2h12v-2l-1-1h3c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m0 13H4V5h16z\"\n}), 'Monitor');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2M9 17H7v-7h2zm4 0h-2V7h2zm4 0h-2v-4h2z\"\n}), 'Assessment');","import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Typography,\n  useTheme,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Button,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  Grid,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Chip,\n  Alert,\n  CircularProgress,\n  Card,\n  CardContent,\n  Snackbar,\n} from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport DescriptionIcon from \"@mui/icons-material/Description\";\nimport PictureAsPdfIcon from \"@mui/icons-material/PictureAsPdf\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport Header from \"../../components/Header\";\nimport { tokens } from \"../../theme\";\nimport { projectService, userService } from \"../../services/api\";\nimport asbestosClearanceService from \"../../services/asbestosClearanceService\";\nimport PermissionGate from \"../../components/PermissionGate\";\nimport { generateHTMLTemplatePDF } from \"../../utils/templatePDFGenerator\";\n\n// ASBESTOS_REMOVALISTS array from air monitoring modal\nconst ASBESTOS_REMOVALISTS = [\n  \"AGH\",\n  \"Aztech Services\",\n  \"Capstone\",\n  \"Crown Asbestos Removals\",\n  \"Empire Contracting\",\n  \"Glade Group\",\n  \"IAR\",\n  \"Jesco\",\n  \"Ozbestos\",\n  \"Spec Services\",\n];\n\nconst AsbestosClearance = () => {\n  const colors = tokens;\n  const navigate = useNavigate();\n\n  const [clearances, setClearances] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [editingClearance, setEditingClearance] = useState(null);\n  const [generatingPDF, setGeneratingPDF] = useState(false);\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: \"\",\n    severity: \"success\",\n  });\n\n  const [form, setForm] = useState({\n    projectId: \"\",\n    clearanceDate: \"\",\n    clearanceType: \"Non-friable\",\n    LAA: \"\",\n    asbestosRemovalist: \"\",\n    airMonitoring: false,\n    airMonitoringReport: null,\n    jobSpecificExclusions: \"\",\n    notes: \"\",\n  });\n\n  // Fetch clearances, projects, and users on component mount\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const [clearancesData, projectsData, usersData] = await Promise.all([\n        asbestosClearanceService.getAll(),\n        projectService.getAll({\n          limit: 1000,\n          status:\n            \"Assigned,In progress,Samples submitted,Lab Analysis Complete,Report sent for review,Ready for invoicing,Invoice sent\",\n        }),\n        userService.getAll(),\n      ]);\n\n      console.log(\"Clearances API response:\", clearancesData);\n      console.log(\"Projects API response:\", projectsData);\n      console.log(\"Projects API response type:\", typeof projectsData);\n      console.log(\n        \"Projects API response keys:\",\n        projectsData ? Object.keys(projectsData) : \"null/undefined\"\n      );\n      console.log(\"Users API response:\", usersData);\n\n      setClearances(\n        clearancesData.clearances || clearancesData.data || clearancesData || []\n      );\n\n      // Ensure projects is always an array - handle different response structures\n      let projectsArray = [];\n      if (projectsData) {\n        // Handle the standard API response structure: { data: [...], pagination: {...} }\n        if (projectsData.data && Array.isArray(projectsData.data)) {\n          projectsArray = projectsData.data;\n        } else if (Array.isArray(projectsData)) {\n          projectsArray = projectsData;\n        } else if (\n          projectsData.data &&\n          projectsData.data.data &&\n          Array.isArray(projectsData.data.data)\n        ) {\n          projectsArray = projectsData.data.data;\n        }\n      }\n      console.log(\"Projects array:\", projectsArray);\n      console.log(\"Projects array length:\", projectsArray.length);\n      console.log(\"First project (if any):\", projectsArray[0]);\n      setProjects(projectsArray);\n\n      // Filter active users and transform for dropdown\n      const activeUsers = (usersData.data || usersData).filter(\n        (user) => user.isActive\n      );\n      setUsers(activeUsers);\n    } catch (err) {\n      console.error(\"Error fetching data:\", err);\n      setError(\"Failed to load data\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (editingClearance) {\n        await asbestosClearanceService.update(editingClearance._id, form);\n        setSnackbar({\n          open: true,\n          message: \"Clearance updated successfully\",\n          severity: \"success\",\n        });\n      } else {\n        await asbestosClearanceService.create(form);\n        setSnackbar({\n          open: true,\n          message: \"Clearance created successfully\",\n          severity: \"success\",\n        });\n      }\n\n      setDialogOpen(false);\n      setEditingClearance(null);\n      resetForm();\n      fetchData();\n    } catch (err) {\n      console.error(\"Error saving clearance:\", err);\n      setSnackbar({\n        open: true,\n        message: \"Failed to save clearance\",\n        severity: \"error\",\n      });\n    }\n  };\n\n  const handleEdit = (clearance) => {\n    setEditingClearance(clearance);\n    setForm({\n      projectId: clearance.projectId._id || clearance.projectId,\n      clearanceDate: clearance.clearanceDate\n        ? new Date(clearance.clearanceDate).toISOString().split(\"T\")[0]\n        : \"\",\n      clearanceType: clearance.clearanceType,\n      LAA: clearance.LAA,\n      asbestosRemovalist: clearance.asbestosRemovalist,\n      airMonitoring: clearance.airMonitoring || false,\n      airMonitoringReport: clearance.airMonitoringReport || null,\n      jobSpecificExclusions: clearance.jobSpecificExclusions || \"\",\n      notes: clearance.notes || \"\",\n    });\n    setDialogOpen(true);\n  };\n\n  const handleDelete = async (clearance) => {\n    if (window.confirm(\"Are you sure you want to delete this clearance?\")) {\n      try {\n        await asbestosClearanceService.delete(clearance._id);\n        setSnackbar({\n          open: true,\n          message: \"Clearance deleted successfully\",\n          severity: \"success\",\n        });\n        fetchData();\n      } catch (err) {\n        console.error(\"Error deleting clearance:\", err);\n        setSnackbar({\n          open: true,\n          message: \"Failed to delete clearance\",\n          severity: \"error\",\n        });\n      }\n    }\n  };\n\n  const handleViewItems = (clearance) => {\n    navigate(`/clearances/${clearance._id}/items`);\n  };\n\n  const handleGeneratePDF = async (clearance) => {\n    try {\n      console.log(\"handleGeneratePDF called with clearance:\", clearance);\n      setGeneratingPDF(true);\n\n      // Get the full clearance data with populated project\n      console.log(\"Fetching full clearance data...\");\n      const fullClearance = await asbestosClearanceService.getById(\n        clearance._id\n      );\n      console.log(\"Full clearance data:\", fullClearance);\n\n      // Use the new HTML template-based PDF generation\n      console.log(\"Calling generateHTMLTemplatePDF...\");\n      const fileName = await generateHTMLTemplatePDF(\n        \"asbestos-clearance\", // template type\n        fullClearance // clearance data\n      );\n      console.log(\"PDF generation completed, fileName:\", fileName);\n\n      setSnackbar({\n        open: true,\n        message: `PDF generated successfully: ${fileName}`,\n        severity: \"success\",\n      });\n    } catch (err) {\n      console.error(\"Error generating PDF:\", err);\n      setSnackbar({\n        open: true,\n        message: \"Failed to generate PDF\",\n        severity: \"error\",\n      });\n    } finally {\n      console.log(\"Setting generatingPDF to false\");\n      setGeneratingPDF(false);\n    }\n  };\n\n  const resetForm = () => {\n    setForm({\n      projectId: \"\",\n      clearanceDate: \"\",\n      clearanceType: \"Non-friable\",\n      LAA: \"\",\n      asbestosRemovalist: \"\",\n      airMonitoring: false,\n      airMonitoringReport: null,\n      jobSpecificExclusions: \"\",\n      notes: \"\",\n    });\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case \"complete\":\n        return \"success\";\n      case \"in progress\":\n        return \"warning\";\n      case \"Site Work Complete\":\n        return \"info\";\n      default:\n        return \"default\";\n    }\n  };\n\n  const getProjectName = (projectId) => {\n    // Ensure projects is an array\n    if (!Array.isArray(projects)) {\n      console.warn(\"Projects is not an array:\", projects);\n      return \"Unknown Project\";\n    }\n\n    // Handle case where projectId is an object with _id\n    const projectIdValue = projectId?._id || projectId;\n    const project = projects.find((p) => p._id === projectIdValue);\n    return project ? project.projectID : \"Unknown Project\";\n  };\n\n  const getProjectDisplayName = (projectId) => {\n    // Ensure projects is an array\n    if (!Array.isArray(projects)) {\n      console.warn(\"Projects is not an array:\", projects);\n      return \"Unknown Project\";\n    }\n\n    // Handle case where projectId is an object with _id\n    const projectIdValue = projectId?._id || projectId;\n    const project = projects.find((p) => p._id === projectIdValue);\n    return project ? project.name : \"Unknown Project\";\n  };\n\n  if (loading) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        height=\"400px\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box m=\"20px\">\n        <Alert severity=\"error\">{error}</Alert>\n      </Box>\n    );\n  }\n\n  return (\n    <PermissionGate requiredPermissions={[\"asbestos.view\"]}>\n      <Box m=\"20px\">\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Typography\n            variant=\"h4\"\n            color={colors.grey[500]}\n            fontWeight=\"bold\"\n            sx={{ mb: \"5px\" }}\n          >\n            Asbestos Clearances\n          </Typography>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              setEditingClearance(null);\n              resetForm();\n              setDialogOpen(true);\n            }}\n            startIcon={<AddIcon />}\n          >\n            Add Clearance\n          </Button>\n        </Box>\n\n        <Card sx={{ mt: 3 }}>\n          <CardContent>\n            {loading ? (\n              <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                height=\"200px\"\n              >\n                <CircularProgress />\n              </Box>\n            ) : (\n              <TableContainer component={Paper}>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Project ID</TableCell>\n                      <TableCell>Clearance Date</TableCell>\n                      <TableCell>Project Name</TableCell>\n                      <TableCell>Type</TableCell>\n                      <TableCell>Air Monitoring</TableCell>\n                      <TableCell>Status</TableCell>\n                      <TableCell>Actions</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {Array.isArray(clearances) &&\n                      (clearances || []).map((clearance) => (\n                        <TableRow key={clearance._id}>\n                          <TableCell>\n                            {getProjectName(clearance.projectId)}\n                          </TableCell>\n                          <TableCell>\n                            {clearance.clearanceDate\n                              ? new Date(\n                                  clearance.clearanceDate\n                                ).toLocaleDateString(\"en-GB\", {\n                                  day: \"2-digit\",\n                                  month: \"2-digit\",\n                                  year: \"numeric\",\n                                })\n                              : \"N/A\"}\n                          </TableCell>\n                          <TableCell>\n                            {getProjectDisplayName(clearance.projectId)}\n                          </TableCell>\n                          <TableCell>{clearance.clearanceType}</TableCell>\n                          <TableCell>\n                            <Chip\n                              label={clearance.airMonitoring ? \"Yes\" : \"No\"}\n                              color={\n                                clearance.airMonitoring ? \"success\" : \"default\"\n                              }\n                              size=\"small\"\n                            />\n                          </TableCell>\n                          <TableCell>\n                            <Chip\n                              label={clearance.status}\n                              color={getStatusColor(clearance.status)}\n                              size=\"small\"\n                            />\n                          </TableCell>\n                          <TableCell>\n                            <IconButton\n                              onClick={() => handleViewItems(clearance)}\n                              color=\"info\"\n                              size=\"small\"\n                              title=\"View Items\"\n                            >\n                              <VisibilityIcon />\n                            </IconButton>\n                            <IconButton\n                              onClick={() => handleEdit(clearance)}\n                              color=\"primary\"\n                              size=\"small\"\n                              title=\"Edit\"\n                            >\n                              <EditIcon />\n                            </IconButton>\n                            <IconButton\n                              onClick={() => handleGeneratePDF(clearance)}\n                              color=\"secondary\"\n                              size=\"small\"\n                              disabled={generatingPDF}\n                              title=\"Generate PDF\"\n                            >\n                              <PictureAsPdfIcon />\n                            </IconButton>\n                            <IconButton\n                              onClick={() => handleDelete(clearance)}\n                              color=\"error\"\n                              size=\"small\"\n                              title=\"Delete\"\n                            >\n                              <DeleteIcon />\n                            </IconButton>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Add/Edit Dialog */}\n        <Dialog\n          open={dialogOpen}\n          onClose={() => setDialogOpen(false)}\n          maxWidth=\"md\"\n          fullWidth\n        >\n          <DialogTitle>\n            {editingClearance ? \"Edit Clearance\" : \"Add New Clearance\"}\n          </DialogTitle>\n          <form onSubmit={handleSubmit}>\n            <DialogContent>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <FormControl fullWidth required>\n                    <InputLabel>Project</InputLabel>\n                    <Select\n                      value={form.projectId}\n                      onChange={(e) =>\n                        setForm({ ...form, projectId: e.target.value })\n                      }\n                      label=\"Project\"\n                    >\n                      {(projects || []).length > 0 ? (\n                        (projects || []).map((project) => (\n                          <MenuItem key={project._id} value={project._id}>\n                            {project.projectID}: {project.name}\n                          </MenuItem>\n                        ))\n                      ) : (\n                        <MenuItem disabled>No projects available</MenuItem>\n                      )}\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <TextField\n                    fullWidth\n                    type=\"date\"\n                    label=\"Clearance Date\"\n                    value={form.clearanceDate}\n                    onChange={(e) =>\n                      setForm({ ...form, clearanceDate: e.target.value })\n                    }\n                    required\n                    InputLabelProps={{ shrink: true }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <FormControl fullWidth required>\n                    <InputLabel>Clearance Type</InputLabel>\n                    <Select\n                      value={form.clearanceType}\n                      onChange={(e) =>\n                        setForm({ ...form, clearanceType: e.target.value })\n                      }\n                      label=\"Clearance Type\"\n                    >\n                      <MenuItem value=\"Non-friable\">Non-friable</MenuItem>\n                      <MenuItem value=\"Friable\">Friable</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <FormControl fullWidth required>\n                    <InputLabel>LAA</InputLabel>\n                    <Select\n                      value={form.LAA}\n                      onChange={(e) =>\n                        setForm({ ...form, LAA: e.target.value })\n                      }\n                      label=\"LAA\"\n                    >\n                      {(users || []).map((user) => (\n                        <MenuItem\n                          key={user._id}\n                          value={`${user.firstName} ${user.lastName}`}\n                        >\n                          {user.firstName} {user.lastName}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <FormControl fullWidth required>\n                    <InputLabel>Asbestos Removalist</InputLabel>\n                    <Select\n                      value={form.asbestosRemovalist}\n                      onChange={(e) =>\n                        setForm({ ...form, asbestosRemovalist: e.target.value })\n                      }\n                      label=\"Asbestos Removalist\"\n                    >\n                      {ASBESTOS_REMOVALISTS.map((removalist) => (\n                        <MenuItem key={removalist} value={removalist}>\n                          {removalist}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={form.airMonitoring}\n                        onChange={(e) =>\n                          setForm({ ...form, airMonitoring: e.target.checked })\n                        }\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Include Air Monitoring Report\"\n                  />\n                </Grid>\n                {form.airMonitoring && (\n                  <Grid item xs={12}>\n                    <input\n                      accept=\".pdf\"\n                      style={{ display: \"none\" }}\n                      id=\"air-monitoring-report-upload\"\n                      type=\"file\"\n                      onChange={(e) => {\n                        const file = e.target.files[0];\n                        if (file) {\n                          const reader = new FileReader();\n                          reader.onload = (event) => {\n                            // Extract just the base64 data from the data URL\n                            const dataUrl = event.target.result;\n                            const base64Data = dataUrl.split(\",\")[1]; // Remove the \"data:application/pdf;base64,\" prefix\n                            setForm({\n                              ...form,\n                              airMonitoringReport: base64Data,\n                            });\n                          };\n                          reader.readAsDataURL(file);\n                        }\n                      }}\n                    />\n                    <label htmlFor=\"air-monitoring-report-upload\">\n                      <Button\n                        variant=\"outlined\"\n                        component=\"span\"\n                        startIcon={<PictureAsPdfIcon />}\n                      >\n                        Upload Air Monitoring Report (PDF)\n                      </Button>\n                    </label>\n                    {form.airMonitoringReport && (\n                      <Typography\n                        variant=\"body2\"\n                        color=\"success.main\"\n                        sx={{ mt: 1 }}\n                      >\n                        ✓ Report uploaded successfully\n                      </Typography>\n                    )}\n                  </Grid>\n                )}\n                <Grid item xs={12}>\n                  <TextField\n                    fullWidth\n                    label=\"Job Specific Exclusions\"\n                    value={form.jobSpecificExclusions}\n                    onChange={(e) =>\n                      setForm({\n                        ...form,\n                        jobSpecificExclusions: e.target.value,\n                      })\n                    }\n                    multiline\n                    rows={3}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    fullWidth\n                    label=\"Notes\"\n                    value={form.notes}\n                    onChange={(e) =>\n                      setForm({ ...form, notes: e.target.value })\n                    }\n                    multiline\n                    rows={3}\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={() => setDialogOpen(false)}>Cancel</Button>\n              <Button type=\"submit\" variant=\"contained\">\n                {editingClearance ? \"Update\" : \"Create\"}\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n\n        {/* Snackbar for notifications */}\n        <Snackbar\n          open={snackbar.open}\n          autoHideDuration={6000}\n          onClose={() => setSnackbar({ ...snackbar, open: false })}\n        >\n          <Alert\n            onClose={() => setSnackbar({ ...snackbar, open: false })}\n            severity={snackbar.severity}\n          >\n            {snackbar.message}\n          </Alert>\n        </Snackbar>\n      </Box>\n    </PermissionGate>\n  );\n};\n\nexport default AsbestosClearance;\n","import jsPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\n\nexport const generateTemplatePDF = async (template, sampleData, replacePlaceholders) => {\n  // Create a new PDF document\n  const doc = new jsPDF();\n  \n  // Set up the page\n  const pageWidth = doc.internal.pageSize.getWidth();\n  const pageHeight = doc.internal.pageSize.getHeight();\n  const margin = 20;\n  const contentWidth = pageWidth - (2 * margin);\n  \n  let y = margin;\n\n  // Helper function to add text with proper spacing\n  const addText = (text, fontSize = 11, fontStyle = \"normal\", spacing = 8) => {\n    if (!text) return y;\n    \n    doc.setFontSize(fontSize);\n    doc.setFont(\"helvetica\", fontStyle);\n    \n    const lines = doc.splitTextToSize(text, contentWidth);\n    doc.text(text, margin, y, { maxWidth: contentWidth });\n    \n    y += (lines.length * fontSize * 1.2) + spacing;\n    return y;\n  };\n\n  // Helper function to add header\n  const addHeader = (text, fontSize = 14, fontStyle = \"bold\") => {\n    return addText(text, fontSize, fontStyle, 12);\n  };\n\n  // Front Cover\n  y = addHeader(\n    replacePlaceholders(\n      template.standardSections.frontCoverTitle || \"Non-friable Asbestos Removal Clearance\"\n    ),\n    16,\n    \"bold\"\n  );\n  y = addText(\n    replacePlaceholders(template.standardSections.frontCoverSubtitle || \"\"),\n    12,\n    \"normal\",\n    20\n  );\n\n  // Add a line break\n  y += 10;\n\n  // Company Details\n  if (template.companyDetails) {\n    y = addHeader(\"Company Details\", 12, \"bold\");\n    Object.entries(template.companyDetails).forEach(([key, value]) => {\n      const label = key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, \" $1\");\n      y = addText(`${label}: ${value}`, 10, \"normal\", 4);\n    });\n    y += 10;\n  }\n\n  // Inspection Details\n  y = addHeader(\n    replacePlaceholders(\n      template.standardSections.inspectionDetailsTitle || \"Inspection Details\"\n    ),\n    12,\n    \"bold\"\n  );\n  y = addText(\n    replacePlaceholders(template.standardSections.inspectionIntroduction || \"\"),\n    10,\n    \"normal\",\n    8\n  );\n  y = addText(\n    replacePlaceholders(template.standardSections.inspectionSpecifics || \"\"),\n    10,\n    \"normal\",\n    8\n  );\n  y = addText(\n    replacePlaceholders(template.standardSections.tableIntroduction || \"\"),\n    10,\n    \"normal\",\n    8\n  );\n\n  // Add a sample inspection table\n  y = addText(\"Sample Inspection Results:\", 10, \"bold\", 4);\n  \n  // Simple table structure\n  const tableData = [\n    [\"Area\", \"Material Type\", \"Condition\", \"Result\"],\n    [\"Kitchen\", \"Vinyl Floor Tiles\", \"Good\", \"Pass\"],\n    [\"Bathroom\", \"Vinyl Floor Tiles\", \"Good\", \"Pass\"],\n    [\"Living Room\", \"Vinyl Floor Tiles\", \"Good\", \"Pass\"],\n  ];\n\n  tableData.forEach((row, index) => {\n    const isHeader = index === 0;\n    const fontStyle = isHeader ? \"bold\" : \"normal\";\n    const fontSize = isHeader ? 10 : 9;\n    \n    // Calculate column widths\n    const colWidths = [40, 50, 40, 30];\n    let x = margin;\n    \n    row.forEach((cell, colIndex) => {\n      doc.setFontSize(fontSize);\n      doc.setFont(\"helvetica\", fontStyle);\n      doc.text(cell, x, y, { maxWidth: colWidths[colIndex] });\n      x += colWidths[colIndex] + 5;\n    });\n    \n    y += fontSize * 1.2 + 2;\n  });\n  \n  y += 10;\n\n  // Check if we need a new page\n  if (y > pageHeight - 100) {\n    doc.addPage();\n    y = margin;\n  }\n\n  // Clearance Certification\n  y = addHeader(\n    replacePlaceholders(\n      template.standardSections.clearanceCertificationTitle || \"Clearance Certification\"\n    ),\n    12,\n    \"bold\"\n  );\n  y = addText(\n    replacePlaceholders(template.standardSections.clearanceCertificationText || \"\"),\n    10,\n    \"normal\",\n    8\n  );\n  y = addText(\n    replacePlaceholders(template.standardSections.riskAssessmentText || \"\"),\n    10,\n    \"normal\",\n    8\n  );\n  y = addText(\n    replacePlaceholders(template.standardSections.contactText || \"\"),\n    10,\n    \"normal\",\n    8\n  );\n  y = addText(\n    replacePlaceholders(template.standardSections.behalfText || \"\"),\n    10,\n    \"normal\",\n    8\n  );\n  y = addText(\n    replacePlaceholders(template.standardSections.signatureTitle || \"\"),\n    10,\n    \"bold\",\n    8\n  );\n\n  // Check if we need a new page\n  if (y > pageHeight - 100) {\n    doc.addPage();\n    y = margin;\n  }\n\n  // Background Information\n  y = addHeader(\n    replacePlaceholders(\n      template.standardSections.backgroundTitle || \"Background Information\"\n    ),\n    12,\n    \"bold\"\n  );\n  y = addText(\n    replacePlaceholders(template.standardSections.backgroundIntroduction || \"\"),\n    10,\n    \"normal\",\n    8\n  );\n  y = addText(\n    `• ${replacePlaceholders(template.standardSections.bulletPoint1 || \"\")}`,\n    10,\n    \"normal\",\n    4\n  );\n  y = addText(\n    `• ${replacePlaceholders(template.standardSections.bulletPoint2 || \"\")}`,\n    10,\n    \"normal\",\n    4\n  );\n  y = addText(\n    replacePlaceholders(template.standardSections.requirementsText || \"\"),\n    10,\n    \"normal\",\n    8\n  );\n  y = addText(\n    `• ${replacePlaceholders(template.standardSections.bulletPoint3 || \"\")}`,\n    10,\n    \"normal\",\n    4\n  );\n  y = addText(\n    `• ${replacePlaceholders(template.standardSections.bulletPoint4 || \"\")}`,\n    10,\n    \"normal\",\n    4\n  );\n  y = addText(\n    `• ${replacePlaceholders(template.standardSections.bulletPoint5 || \"\")}`,\n    10,\n    \"normal\",\n    4\n  );\n\n  // Check if we need a new page\n  if (y > pageHeight - 100) {\n    doc.addPage();\n    y = margin;\n  }\n\n  // Legislative Requirements\n  y = addHeader(\n    replacePlaceholders(\n      template.standardSections.legislativeTitle || \"Legislative Requirements\"\n    ),\n    12,\n    \"bold\"\n  );\n  y = addText(\n    replacePlaceholders(template.standardSections.legislativeIntroduction || \"\"),\n    10,\n    \"normal\",\n    8\n  );\n  y = addText(\n    `• ${replacePlaceholders(template.standardSections.legislativePoint1 || \"\")}`,\n    10,\n    \"normal\",\n    4\n  );\n  y = addText(\n    `• ${replacePlaceholders(template.standardSections.legislativePoint2 || \"\")}`,\n    10,\n    \"normal\",\n    4\n  );\n  y = addText(\n    `• ${replacePlaceholders(template.standardSections.legislativePoint3 || \"\")}`,\n    10,\n    \"normal\",\n    4\n  );\n\n  // Limitations\n  y = addHeader(\n    replacePlaceholders(\n      template.standardSections.limitationsTitle || \"Limitations\"\n    ),\n    12,\n    \"bold\"\n  );\n  y = addText(\n    replacePlaceholders(template.standardSections.limitationsText || \"\"),\n    10,\n    \"normal\",\n    8\n  );\n\n  // Check if we need a new page for signature\n  if (y > pageHeight - 150) {\n    doc.addPage();\n    y = margin;\n  }\n\n  // Signature Section\n  y = addHeader(\"Authorised Signature\", 12, \"bold\");\n  y += 20; // Space for signature line\n  \n  // Signature line\n  doc.setLineWidth(0.5);\n  doc.line(margin, y, margin + 80, y);\n  y += 5;\n  \n  // Signature details\n  y = addText(\"Name: John Smith\", 10, \"normal\", 4);\n  y = addText(\"License: AI000456\", 10, \"normal\", 4);\n  y = addText(\"Date: 25 July 2024\", 10, \"normal\", 4);\n  \n  y += 20;\n\n  // Footer\n  y = addText(\n    replacePlaceholders(template.standardSections.footerText || \"\"),\n    9,\n    \"normal\",\n    8\n  );\n\n  // Save the PDF\n  const fileName = `asbestos-clearance-template-preview-${new Date().toISOString().split('T')[0]}.pdf`;\n  doc.save(fileName);\n\n  return fileName;\n};\n\n/**\n * Generate PDF from HTML templates using server-side Puppeteer\n * @param {string} templateType - Type of template (e.g., 'asbestos-clearance')\n * @param {Object} data - Clearance data\n * @returns {Promise<string>} - Generated PDF filename\n */\nexport const generateHTMLPDF = async (templateType, data) => {\n  return generateHTMLTemplatePDF(templateType, data);\n    };\n\nexport const generateHTMLTemplatePDF = async (templateType, data) => {\n  try {\n    console.log('Starting server-side PDF generation with data:', data);\n    \n    // Get the API base URL from the environment\n    const apiBaseUrl = process.env.NODE_ENV === 'development' \n      ? \"http://localhost:5000/api\" \n      : \"https://landd-app-backend1.onrender.com/api\";\n    \n    const requestUrl = `${apiBaseUrl}/pdf/generate-asbestos-clearance?t=${Date.now()}`;\n    console.log('Calling backend URL:', requestUrl);\n\n    // Call the server-side PDF generation endpoint with cache busting\n    const response = await fetch(requestUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        'Cache-Control': 'no-cache, no-store, must-revalidate',\n        'Pragma': 'no-cache',\n        'Expires': '0'\n      },\n      body: JSON.stringify({ clearanceData: data })\n    });\n\n    console.log('Response status:', response.status);\n    console.log('Response headers:', Object.fromEntries(response.headers.entries()));\n    \n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || 'Failed to generate PDF');\n    }\n\n    // Get the PDF blob\n    const pdfBlob = await response.blob();\n    console.log('PDF blob size:', pdfBlob.size, 'bytes');\n\n    // Create a download link\n    const url = window.URL.createObjectURL(pdfBlob);\n    const link = document.createElement('a');\n    link.href = url;\n\n    // Generate filename\n    const fileName = `asbestos-clearance-${data.projectId?.name || 'report'}-${new Date().toISOString().split('T')[0]}.pdf`;\n    link.download = fileName;\n\n    // Trigger download\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    \n    // Clean up\n    window.URL.revokeObjectURL(url);\n    \n    console.log('PDF generation completed successfully:', fileName);\n    return fileName;\n    \n  } catch (error) {\n    console.error(\"Error generating HTML template PDF:\", error);\n    console.error(\"Error stack:\", error.stack);\n    throw error;\n  }\n}; ","import axios from './axios';\r\n\r\nconst API_BASE_URL = '/asbestos-clearances';\r\n\r\nconst asbestosClearanceService = {\r\n  // Get all asbestos clearances with optional filters\r\n  getAll: async (params = {}) => {\r\n    const response = await axios.get(API_BASE_URL, { params });\r\n    return response.data;\r\n  },\r\n\r\n  // Get single asbestos clearance by ID\r\n  getById: async (id) => {\r\n    const response = await axios.get(`${API_BASE_URL}/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Create new asbestos clearance\r\n  create: async (clearanceData) => {\r\n    const response = await axios.post(API_BASE_URL, clearanceData);\r\n    return response.data;\r\n  },\r\n\r\n  // Update asbestos clearance\r\n  update: async (id, clearanceData) => {\r\n    const response = await axios.put(`${API_BASE_URL}/${id}`, clearanceData);\r\n    return response.data;\r\n  },\r\n\r\n  // Delete asbestos clearance\r\n  delete: async (id) => {\r\n    const response = await axios.delete(`${API_BASE_URL}/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Update status only\r\n  updateStatus: async (id, status) => {\r\n    const response = await axios.patch(`${API_BASE_URL}/${id}/status`, { status });\r\n    return response.data;\r\n  },\r\n\r\n  // Get statistics\r\n  getStats: async () => {\r\n    const response = await axios.get(`${API_BASE_URL}/stats/overview`);\r\n    return response.data;\r\n  },\r\n\r\n  // Search clearances\r\n  search: async (searchTerm, filters = {}) => {\r\n    const params = {\r\n      search: searchTerm,\r\n      ...filters\r\n    };\r\n    const response = await axios.get(API_BASE_URL, { params });\r\n    return response.data;\r\n  },\r\n\r\n  // Get clearances by status\r\n  getByStatus: async (status) => {\r\n    const response = await axios.get(API_BASE_URL, { \r\n      params: { status } \r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  // Get clearances by asbestos removalist\r\n  getByRemovalist: async (asbestosRemovalist) => {\r\n    const response = await axios.get(API_BASE_URL, { \r\n      params: { asbestosRemovalist } \r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  // Upload air monitoring report\r\n  uploadAirMonitoringReport: async (id, reportData) => {\r\n    const response = await axios.post(`${API_BASE_URL}/${id}/air-monitoring-report`, reportData);\r\n    return response.data;\r\n  },\r\n\r\n  // Get clearance items\r\n  getItems: async (clearanceId) => {\r\n    const response = await axios.get(`${API_BASE_URL}/${clearanceId}/items`);\r\n    return response.data;\r\n  },\r\n\r\n  // Add clearance item\r\n  addItem: async (clearanceId, itemData) => {\r\n    const response = await axios.post(`${API_BASE_URL}/${clearanceId}/items`, itemData);\r\n    return response.data;\r\n  },\r\n\r\n  // Update clearance item\r\n  updateItem: async (clearanceId, itemId, itemData) => {\r\n    const response = await axios.put(`${API_BASE_URL}/${clearanceId}/items/${itemId}`, itemData);\r\n    return response.data;\r\n  },\r\n\r\n  // Delete clearance item\r\n  deleteItem: async (clearanceId, itemId) => {\r\n    const response = await axios.delete(`${API_BASE_URL}/${clearanceId}/items/${itemId}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get air monitoring reports for a project\r\n  getAirMonitoringReports: async (projectId) => {\r\n    const response = await axios.get(`${API_BASE_URL}/air-monitoring-reports/${projectId}`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\nexport default asbestosClearanceService; ","import React, { useState } from \"react\";\nimport Header from \"../../components/Header\";\nimport {\n  Box,\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  CardActionArea,\n} from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport MonitorIcon from \"@mui/icons-material/Monitor\";\nimport AssessmentIcon from \"@mui/icons-material/Assessment\";\nimport { tokens } from \"../../theme\";\nimport { useTheme } from \"@mui/material/styles\";\nimport AirMonitoring from \"../air-monitoring\";\nimport AsbestosClearance from \"../clearances/AsbestosClearance\";\n\nconst AsbestosRemovalWidget = ({\n  title,\n  icon,\n  color = \"primary\",\n  onClick,\n  active,\n}) => (\n  <Card\n    sx={{\n      height: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      transition: \"transform 0.2s, box-shadow 0.2s\",\n      \"&:hover\": {\n        transform: \"translateY(-4px)\",\n        boxShadow: 4,\n      },\n      ...(active && {\n        backgroundColor: `${color}.light`,\n        border: `2px solid ${color}.main`,\n      }),\n    }}\n  >\n    <CardActionArea\n      onClick={onClick}\n      sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}\n    >\n      <CardContent sx={{ flexGrow: 1, textAlign: \"center\", p: 3 }}>\n        <Box sx={{ mb: 2, display: \"flex\", justifyContent: \"center\" }}>\n          {React.cloneElement(icon, {\n            sx: { fontSize: 48, color: `${color}.main` },\n          })}\n        </Box>\n        <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n          {title}\n        </Typography>\n      </CardContent>\n    </CardActionArea>\n  </Card>\n);\n\nconst AsbestosRemoval = () => {\n  const theme = useTheme();\n  const colors = tokens;\n  const navigate = useNavigate();\n  const [activeSection, setActiveSection] = useState(null);\n\n  const asbestosRemovalWidgets = [\n    {\n      title: \"Air Monitoring\",\n      icon: <MonitorIcon />,\n      color: \"primary\",\n      onClick: () => setActiveSection(\"air-monitoring\"),\n    },\n    {\n      title: \"Clearances\",\n      icon: <AssessmentIcon />,\n      color: \"secondary\",\n      onClick: () => setActiveSection(\"clearances\"),\n    },\n  ];\n\n  const renderAirMonitoringSection = () => {\n    return <AirMonitoring />;\n  };\n\n  const renderClearancesSection = () => {\n    return <AsbestosClearance />;\n  };\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Header title=\"Asbestos Removal Jobs\" />\n\n\n      {/* Service Cards */}\n      <Grid container spacing={3}>\n        {asbestosRemovalWidgets.map((widget, index) => (\n          <Grid item xs={12} md={6} key={index}>\n            <AsbestosRemovalWidget\n              {...widget}\n              active={\n                activeSection ===\n                (widget.title === \"Air Monitoring\"\n                  ? \"air-monitoring\"\n                  : \"clearances\")\n              }\n            />\n          </Grid>\n        ))}\n      </Grid>\n\n      {/* Content Sections */}\n      {activeSection === \"air-monitoring\" && renderAirMonitoringSection()}\n      {activeSection === \"clearances\" && renderClearancesSection()}\n    </Box>\n  );\n};\n\nexport default AsbestosRemoval;\n"],"names":["getCardActionAreaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionAreaRoot","styled","ButtonBase","name","overridesResolver","props","styles","root","_ref","theme","display","textAlign","borderRadius","width","concat","cardActionAreaClasses","focusHighlight","opacity","vars","palette","action","hoverOpacity","focusVisible","focusOpacity","CardActionAreaFocusHighlight","_ref2","overflow","pointerEvents","position","top","right","bottom","left","backgroundColor","transition","transitions","create","duration","short","React","inProps","ref","useDefaultProps","children","className","focusVisibleClassName","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","_jsxs","_extends","clsx","_jsx","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","ASBESTOS_REMOVALISTS","AsbestosClearance","colors","tokens","navigate","useNavigate","clearances","setClearances","useState","projects","setProjects","users","setUsers","loading","setLoading","error","setError","dialogOpen","setDialogOpen","editingClearance","setEditingClearance","generatingPDF","setGeneratingPDF","snackbar","setSnackbar","open","message","severity","form","setForm","projectId","clearanceDate","clearanceType","LAA","asbestosRemovalist","airMonitoring","airMonitoringReport","jobSpecificExclusions","notes","useEffect","fetchData","async","clearancesData","projectsData","usersData","Promise","all","asbestosClearanceService","getAll","projectService","limit","status","userService","console","log","Object","keys","data","projectsArray","Array","isArray","length","activeUsers","filter","user","isActive","err","resetForm","getStatusColor","getProjectName","warn","projectIdValue","_id","project","find","p","projectID","getProjectDisplayName","Box","justifyContent","alignItems","height","CircularProgress","m","Alert","PermissionGate","requiredPermissions","Typography","variant","color","grey","fontWeight","sx","mb","Button","onClick","startIcon","AddIcon","Card","mt","CardContent","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","clearance","Date","toLocaleDateString","day","month","year","Chip","label","size","IconButton","handleViewItems","title","VisibilityIcon","toISOString","split","handleEdit","EditIcon","fullClearance","getById","fileName","generateHTMLTemplatePDF","handleGeneratePDF","disabled","PictureAsPdfIcon","window","confirm","delete","handleDelete","DeleteIcon","Dialog","onClose","maxWidth","fullWidth","DialogTitle","onSubmit","e","preventDefault","update","DialogContent","Grid","container","spacing","item","xs","FormControl","required","InputLabel","Select","value","onChange","_objectSpread","target","MenuItem","md","TextField","type","InputLabelProps","shrink","firstName","lastName","removalist","FormControlLabel","control","Checkbox","checked","accept","style","id","file","files","reader","FileReader","onload","event","base64Data","result","readAsDataURL","htmlFor","multiline","rows","DialogActions","Snackbar","autoHideDuration","generateTemplatePDF","template","sampleData","replacePlaceholders","doc","jsPDF","pageWidth","internal","pageSize","getWidth","pageHeight","getHeight","margin","contentWidth","y","addText","text","fontSize","arguments","undefined","fontStyle","setFontSize","setFont","lines","splitTextToSize","addHeader","standardSections","frontCoverTitle","frontCoverSubtitle","companyDetails","entries","forEach","key","charAt","toUpperCase","slice","replace","inspectionDetailsTitle","inspectionIntroduction","inspectionSpecifics","tableIntroduction","row","index","isHeader","colWidths","x","cell","colIndex","addPage","clearanceCertificationTitle","clearanceCertificationText","riskAssessmentText","contactText","behalfText","signatureTitle","backgroundTitle","backgroundIntroduction","bulletPoint1","bulletPoint2","requirementsText","bulletPoint3","bulletPoint4","bulletPoint5","legislativeTitle","legislativeIntroduction","legislativePoint1","legislativePoint2","legislativePoint3","limitationsTitle","limitationsText","setLineWidth","line","footerText","save","generateHTMLPDF","templateType","_data$projectId","requestUrl","now","response","fetch","method","headers","localStorage","getItem","body","JSON","stringify","clearanceData","fromEntries","ok","errorData","json","Error","pdfBlob","blob","url","URL","createObjectURL","link","document","createElement","href","download","appendChild","click","removeChild","revokeObjectURL","stack","API_BASE_URL","params","axios","get","post","put","updateStatus","patch","getStats","search","searchTerm","filters","getByStatus","getByRemovalist","uploadAirMonitoringReport","reportData","getItems","clearanceId","addItem","itemData","updateItem","itemId","deleteItem","getAirMonitoringReports","AsbestosRemovalWidget","icon","active","flexDirection","transform","boxShadow","border","CardActionArea","flexGrow","gutterBottom","AsbestosRemoval","useTheme","activeSection","setActiveSection","asbestosRemovalWidgets","MonitorIcon","AssessmentIcon","Header","widget","AirMonitoring"],"sourceRoot":""}