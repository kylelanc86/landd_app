require('dotenv').config();
const PDFShiftService = require('./services/pdfshiftService');

async function testPDFShift() {
  console.log('Testing PDFShift integration...');
  
  // Check if API key is set
  if (!process.env.PDFSHIFT_API_KEY) {
    console.error('‚ùå PDFSHIFT_API_KEY environment variable is not set');
    console.log('Please add PDFSHIFT_API_KEY=your_api_key to your .env file');
    return;
  }

  console.log('‚úÖ PDFSHIFT_API_KEY found');
  
  const pdfShiftService = new PDFShiftService();

  try {
    // Test 1: Basic connection test
    console.log('\nüß™ Test 1: Basic connection test...');
    const isConnected = await pdfShiftService.testConnection();
    
    if (isConnected) {
      console.log('‚úÖ PDFShift connection successful');
    } else {
      console.log('‚ùå PDFShift connection failed');
      return;
    }

    // Test 2: Simple HTML to PDF
    console.log('\nüß™ Test 2: Simple HTML to PDF...');
    const simpleHTML = `
      <html>
        <head>
          <style>
            body { font-family: Arial, sans-serif; margin: 40px; }
            h1 { color: #333; }
            .test-content { background: #f5f5f5; padding: 20px; border-radius: 5px; }
          </style>
        </head>
        <body>
          <h1>PDFShift Test Report</h1>
          <div class="test-content">
            <h2>Test Results</h2>
            <p>This is a test PDF generated using PDFShift.</p>
            <ul>
              <li>HTML rendering: ‚úÖ</li>
              <li>CSS styling: ‚úÖ</li>
              <li>PDF generation: ‚úÖ</li>
            </ul>
            <p><strong>Generated on:</strong> ${new Date().toLocaleString()}</p>
          </div>
        </body>
      </html>
    `;

    const pdfBuffer = await pdfShiftService.generatePDF(simpleHTML);

    console.log(`‚úÖ Simple PDF generated successfully (${pdfBuffer.length} bytes)`);

    // Test 3: Complex HTML with tables and styling
    console.log('\nüß™ Test 3: Complex HTML with tables...');
    const complexHTML = `
      <html>
        <head>
          <style>
            body { font-family: Arial, sans-serif; margin: 20px; }
            h1 { color: #2c3e50; text-align: center; }
            table { width: 100%; border-collapse: collapse; margin: 20px 0; }
            th, td { border: 1px solid #ddd; padding: 12px; text-align: left; }
            th { background-color: #f2f2f2; font-weight: bold; }
            .header { background: #34495e; color: white; padding: 20px; }
            .content { padding: 20px; }
            .footer { background: #ecf0f1; padding: 10px; text-align: center; font-size: 12px; }
          </style>
        </head>
        <body>
          <div class="header">
            <h1>Complex Test Report</h1>
            <p>Testing PDFShift with complex HTML and CSS</p>
          </div>
          
          <div class="content">
            <h2>Sample Data Table</h2>
            <table>
              <thead>
                <tr>
                  <th>ID</th>
                  <th>Name</th>
                  <th>Status</th>
                  <th>Date</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>001</td>
                  <td>Sample Project 1</td>
                  <td>Active</td>
                  <td>2024-01-15</td>
                </tr>
                <tr>
                  <td>002</td>
                  <td>Sample Project 2</td>
                  <td>Completed</td>
                  <td>2024-01-20</td>
                </tr>
                <tr>
                  <td>003</td>
                  <td>Sample Project 3</td>
                  <td>Pending</td>
                  <td>2024-01-25</td>
                </tr>
              </tbody>
            </table>
            
            <h2>Test Results Summary</h2>
            <ul>
              <li>‚úÖ HTML rendering and styling</li>
              <li>‚úÖ Table formatting</li>
              <li>‚úÖ CSS layout and colors</li>
              <li>‚úÖ Professional PDF output</li>
            </ul>
          </div>
          
          <div class="footer">
            <p>Generated by PDFShift on ${new Date().toLocaleString()}</p>
          </div>
        </body>
      </html>
    `;

    const complexPdfBuffer = await pdfShiftService.generatePDF(complexHTML);

    console.log(`‚úÖ Complex PDF generated successfully (${complexPdfBuffer.length} bytes)`);

    console.log('\nüéâ All PDFShift tests passed!');
    console.log('\nüìã Summary:');
    console.log('- ‚úÖ API connection working');
    console.log('- ‚úÖ Simple HTML to PDF working');
    console.log('- ‚úÖ Complex HTML with tables working');
    console.log('- ‚úÖ CSS styling working');
    console.log('\nüöÄ PDFShift is ready for production use!');

  } catch (error) {
    console.error('‚ùå PDFShift test failed:', error);
    console.error('Error details:', error.message);
  }
}

// Run the test
testPDFShift(); 